//
// File generated by rootcint at Mon May  5 01:25:53 2014

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME CastorTreeVariablesDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "CastorTreeVariablesDict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void CentralityData_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_CentralityData(void *p = 0);
   static void *newArray_CentralityData(Long_t size, void *p);
   static void delete_CentralityData(void *p);
   static void deleteArray_CentralityData(void *p);
   static void destruct_CentralityData(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::CentralityData*)
   {
      ::CentralityData *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::CentralityData >(0);
      static ::ROOT::TGenericClassInfo 
         instance("CentralityData", ::CentralityData::Class_Version(), "./CastorTreeVariables.h", 31,
                  typeid(::CentralityData), DefineBehavior(ptr, ptr),
                  &::CentralityData::Dictionary, isa_proxy, 4,
                  sizeof(::CentralityData) );
      instance.SetNew(&new_CentralityData);
      instance.SetNewArray(&newArray_CentralityData);
      instance.SetDelete(&delete_CentralityData);
      instance.SetDeleteArray(&deleteArray_CentralityData);
      instance.SetDestructor(&destruct_CentralityData);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::CentralityData*)
   {
      return GenerateInitInstanceLocal((::CentralityData*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CentralityData*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void RecHit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RecHit(void *p = 0);
   static void *newArray_RecHit(Long_t size, void *p);
   static void delete_RecHit(void *p);
   static void deleteArray_RecHit(void *p);
   static void destruct_RecHit(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::RecHit*)
   {
      ::RecHit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RecHit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RecHit", ::RecHit::Class_Version(), "./CastorTreeVariables.h", 51,
                  typeid(::RecHit), DefineBehavior(ptr, ptr),
                  &::RecHit::Dictionary, isa_proxy, 4,
                  sizeof(::RecHit) );
      instance.SetNew(&new_RecHit);
      instance.SetNewArray(&newArray_RecHit);
      instance.SetDelete(&delete_RecHit);
      instance.SetDeleteArray(&deleteArray_RecHit);
      instance.SetDestructor(&destruct_RecHit);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::RecHit*)
   {
      return GenerateInitInstanceLocal((::RecHit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RecHit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void RecHitEB_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RecHitEB(void *p = 0);
   static void *newArray_RecHitEB(Long_t size, void *p);
   static void delete_RecHitEB(void *p);
   static void deleteArray_RecHitEB(void *p);
   static void destruct_RecHitEB(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::RecHitEB*)
   {
      ::RecHitEB *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RecHitEB >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RecHitEB", ::RecHitEB::Class_Version(), "./CastorTreeVariables.h", 68,
                  typeid(::RecHitEB), DefineBehavior(ptr, ptr),
                  &::RecHitEB::Dictionary, isa_proxy, 4,
                  sizeof(::RecHitEB) );
      instance.SetNew(&new_RecHitEB);
      instance.SetNewArray(&newArray_RecHitEB);
      instance.SetDelete(&delete_RecHitEB);
      instance.SetDeleteArray(&deleteArray_RecHitEB);
      instance.SetDestructor(&destruct_RecHitEB);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::RecHitEB*)
   {
      return GenerateInitInstanceLocal((::RecHitEB*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RecHitEB*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void RecHitEE_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RecHitEE(void *p = 0);
   static void *newArray_RecHitEE(Long_t size, void *p);
   static void delete_RecHitEE(void *p);
   static void deleteArray_RecHitEE(void *p);
   static void destruct_RecHitEE(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::RecHitEE*)
   {
      ::RecHitEE *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RecHitEE >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RecHitEE", ::RecHitEE::Class_Version(), "./CastorTreeVariables.h", 84,
                  typeid(::RecHitEE), DefineBehavior(ptr, ptr),
                  &::RecHitEE::Dictionary, isa_proxy, 4,
                  sizeof(::RecHitEE) );
      instance.SetNew(&new_RecHitEE);
      instance.SetNewArray(&newArray_RecHitEE);
      instance.SetDelete(&delete_RecHitEE);
      instance.SetDeleteArray(&deleteArray_RecHitEE);
      instance.SetDestructor(&destruct_RecHitEE);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::RecHitEE*)
   {
      return GenerateInitInstanceLocal((::RecHitEE*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RecHitEE*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void RecHitHBHE_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RecHitHBHE(void *p = 0);
   static void *newArray_RecHitHBHE(Long_t size, void *p);
   static void delete_RecHitHBHE(void *p);
   static void deleteArray_RecHitHBHE(void *p);
   static void destruct_RecHitHBHE(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::RecHitHBHE*)
   {
      ::RecHitHBHE *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RecHitHBHE >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RecHitHBHE", ::RecHitHBHE::Class_Version(), "./CastorTreeVariables.h", 100,
                  typeid(::RecHitHBHE), DefineBehavior(ptr, ptr),
                  &::RecHitHBHE::Dictionary, isa_proxy, 4,
                  sizeof(::RecHitHBHE) );
      instance.SetNew(&new_RecHitHBHE);
      instance.SetNewArray(&newArray_RecHitHBHE);
      instance.SetDelete(&delete_RecHitHBHE);
      instance.SetDeleteArray(&deleteArray_RecHitHBHE);
      instance.SetDestructor(&destruct_RecHitHBHE);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::RecHitHBHE*)
   {
      return GenerateInitInstanceLocal((::RecHitHBHE*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RecHitHBHE*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void RecHitHF_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RecHitHF(void *p = 0);
   static void *newArray_RecHitHF(Long_t size, void *p);
   static void delete_RecHitHF(void *p);
   static void deleteArray_RecHitHF(void *p);
   static void destruct_RecHitHF(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::RecHitHF*)
   {
      ::RecHitHF *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RecHitHF >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RecHitHF", ::RecHitHF::Class_Version(), "./CastorTreeVariables.h", 116,
                  typeid(::RecHitHF), DefineBehavior(ptr, ptr),
                  &::RecHitHF::Dictionary, isa_proxy, 4,
                  sizeof(::RecHitHF) );
      instance.SetNew(&new_RecHitHF);
      instance.SetNewArray(&newArray_RecHitHF);
      instance.SetDelete(&delete_RecHitHF);
      instance.SetDeleteArray(&deleteArray_RecHitHF);
      instance.SetDestructor(&destruct_RecHitHF);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::RecHitHF*)
   {
      return GenerateInitInstanceLocal((::RecHitHF*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RecHitHF*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TowerHF_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TowerHF(void *p = 0);
   static void *newArray_TowerHF(Long_t size, void *p);
   static void delete_TowerHF(void *p);
   static void deleteArray_TowerHF(void *p);
   static void destruct_TowerHF(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TowerHF*)
   {
      ::TowerHF *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TowerHF >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TowerHF", ::TowerHF::Class_Version(), "./CastorTreeVariables.h", 139,
                  typeid(::TowerHF), DefineBehavior(ptr, ptr),
                  &::TowerHF::Dictionary, isa_proxy, 4,
                  sizeof(::TowerHF) );
      instance.SetNew(&new_TowerHF);
      instance.SetNewArray(&newArray_TowerHF);
      instance.SetDelete(&delete_TowerHF);
      instance.SetDeleteArray(&deleteArray_TowerHF);
      instance.SetDestructor(&destruct_TowerHF);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TowerHF*)
   {
      return GenerateInitInstanceLocal((::TowerHF*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TowerHF*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void RecHitZDC_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RecHitZDC(void *p = 0);
   static void *newArray_RecHitZDC(Long_t size, void *p);
   static void delete_RecHitZDC(void *p);
   static void deleteArray_RecHitZDC(void *p);
   static void destruct_RecHitZDC(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::RecHitZDC*)
   {
      ::RecHitZDC *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RecHitZDC >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RecHitZDC", ::RecHitZDC::Class_Version(), "./CastorTreeVariables.h", 155,
                  typeid(::RecHitZDC), DefineBehavior(ptr, ptr),
                  &::RecHitZDC::Dictionary, isa_proxy, 4,
                  sizeof(::RecHitZDC) );
      instance.SetNew(&new_RecHitZDC);
      instance.SetNewArray(&newArray_RecHitZDC);
      instance.SetDelete(&delete_RecHitZDC);
      instance.SetDeleteArray(&deleteArray_RecHitZDC);
      instance.SetDestructor(&destruct_RecHitZDC);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::RecHitZDC*)
   {
      return GenerateInitInstanceLocal((::RecHitZDC*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RecHitZDC*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void DigiZDC_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_DigiZDC(void *p = 0);
   static void *newArray_DigiZDC(Long_t size, void *p);
   static void delete_DigiZDC(void *p);
   static void deleteArray_DigiZDC(void *p);
   static void destruct_DigiZDC(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::DigiZDC*)
   {
      ::DigiZDC *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::DigiZDC >(0);
      static ::ROOT::TGenericClassInfo 
         instance("DigiZDC", ::DigiZDC::Class_Version(), "./CastorTreeVariables.h", 170,
                  typeid(::DigiZDC), DefineBehavior(ptr, ptr),
                  &::DigiZDC::Dictionary, isa_proxy, 4,
                  sizeof(::DigiZDC) );
      instance.SetNew(&new_DigiZDC);
      instance.SetNewArray(&newArray_DigiZDC);
      instance.SetDelete(&delete_DigiZDC);
      instance.SetDeleteArray(&deleteArray_DigiZDC);
      instance.SetDestructor(&destruct_DigiZDC);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::DigiZDC*)
   {
      return GenerateInitInstanceLocal((::DigiZDC*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::DigiZDC*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void DigiCASTOR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_DigiCASTOR(void *p = 0);
   static void *newArray_DigiCASTOR(Long_t size, void *p);
   static void delete_DigiCASTOR(void *p);
   static void deleteArray_DigiCASTOR(void *p);
   static void destruct_DigiCASTOR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::DigiCASTOR*)
   {
      ::DigiCASTOR *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::DigiCASTOR >(0);
      static ::ROOT::TGenericClassInfo 
         instance("DigiCASTOR", ::DigiCASTOR::Class_Version(), "./CastorTreeVariables.h", 189,
                  typeid(::DigiCASTOR), DefineBehavior(ptr, ptr),
                  &::DigiCASTOR::Dictionary, isa_proxy, 4,
                  sizeof(::DigiCASTOR) );
      instance.SetNew(&new_DigiCASTOR);
      instance.SetNewArray(&newArray_DigiCASTOR);
      instance.SetDelete(&delete_DigiCASTOR);
      instance.SetDeleteArray(&deleteArray_DigiCASTOR);
      instance.SetDestructor(&destruct_DigiCASTOR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::DigiCASTOR*)
   {
      return GenerateInitInstanceLocal((::DigiCASTOR*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::DigiCASTOR*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void RecHitCASTOR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RecHitCASTOR(void *p = 0);
   static void *newArray_RecHitCASTOR(Long_t size, void *p);
   static void delete_RecHitCASTOR(void *p);
   static void deleteArray_RecHitCASTOR(void *p);
   static void destruct_RecHitCASTOR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::RecHitCASTOR*)
   {
      ::RecHitCASTOR *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RecHitCASTOR >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RecHitCASTOR", ::RecHitCASTOR::Class_Version(), "./CastorTreeVariables.h", 206,
                  typeid(::RecHitCASTOR), DefineBehavior(ptr, ptr),
                  &::RecHitCASTOR::Dictionary, isa_proxy, 4,
                  sizeof(::RecHitCASTOR) );
      instance.SetNew(&new_RecHitCASTOR);
      instance.SetNewArray(&newArray_RecHitCASTOR);
      instance.SetDelete(&delete_RecHitCASTOR);
      instance.SetDeleteArray(&deleteArray_RecHitCASTOR);
      instance.SetDestructor(&destruct_RecHitCASTOR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::RecHitCASTOR*)
   {
      return GenerateInitInstanceLocal((::RecHitCASTOR*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RecHitCASTOR*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TrackData_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TrackData(void *p = 0);
   static void *newArray_TrackData(Long_t size, void *p);
   static void delete_TrackData(void *p);
   static void deleteArray_TrackData(void *p);
   static void destruct_TrackData(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TrackData*)
   {
      ::TrackData *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TrackData >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TrackData", ::TrackData::Class_Version(), "./CastorTreeVariables.h", 227,
                  typeid(::TrackData), DefineBehavior(ptr, ptr),
                  &::TrackData::Dictionary, isa_proxy, 4,
                  sizeof(::TrackData) );
      instance.SetNew(&new_TrackData);
      instance.SetNewArray(&newArray_TrackData);
      instance.SetDelete(&delete_TrackData);
      instance.SetDeleteArray(&deleteArray_TrackData);
      instance.SetDestructor(&destruct_TrackData);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TrackData*)
   {
      return GenerateInitInstanceLocal((::TrackData*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TrackData*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void GenParticle_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_GenParticle(void *p = 0);
   static void *newArray_GenParticle(Long_t size, void *p);
   static void delete_GenParticle(void *p);
   static void deleteArray_GenParticle(void *p);
   static void destruct_GenParticle(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GenParticle*)
   {
      ::GenParticle *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GenParticle >(0);
      static ::ROOT::TGenericClassInfo 
         instance("GenParticle", ::GenParticle::Class_Version(), "./CastorTreeVariables.h", 242,
                  typeid(::GenParticle), DefineBehavior(ptr, ptr),
                  &::GenParticle::Dictionary, isa_proxy, 4,
                  sizeof(::GenParticle) );
      instance.SetNew(&new_GenParticle);
      instance.SetNewArray(&newArray_GenParticle);
      instance.SetDelete(&delete_GenParticle);
      instance.SetDeleteArray(&deleteArray_GenParticle);
      instance.SetDestructor(&destruct_GenParticle);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GenParticle*)
   {
      return GenerateInitInstanceLocal((::GenParticle*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::GenParticle*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void AnalysisEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_AnalysisEvent(void *p = 0);
   static void *newArray_AnalysisEvent(Long_t size, void *p);
   static void delete_AnalysisEvent(void *p);
   static void deleteArray_AnalysisEvent(void *p);
   static void destruct_AnalysisEvent(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::AnalysisEvent*)
   {
      ::AnalysisEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::AnalysisEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("AnalysisEvent", ::AnalysisEvent::Class_Version(), "./CastorTreeVariables.h", 278,
                  typeid(::AnalysisEvent), DefineBehavior(ptr, ptr),
                  &::AnalysisEvent::Dictionary, isa_proxy, 4,
                  sizeof(::AnalysisEvent) );
      instance.SetNew(&new_AnalysisEvent);
      instance.SetNewArray(&newArray_AnalysisEvent);
      instance.SetDelete(&delete_AnalysisEvent);
      instance.SetDeleteArray(&deleteArray_AnalysisEvent);
      instance.SetDestructor(&destruct_AnalysisEvent);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::AnalysisEvent*)
   {
      return GenerateInitInstanceLocal((::AnalysisEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::AnalysisEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *CentralityData::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *CentralityData::Class_Name()
{
   return "CentralityData";
}

//______________________________________________________________________________
const char *CentralityData::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CentralityData*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CentralityData::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CentralityData*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CentralityData::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CentralityData*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CentralityData::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CentralityData*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *RecHit::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *RecHit::Class_Name()
{
   return "RecHit";
}

//______________________________________________________________________________
const char *RecHit::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RecHit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RecHit::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RecHit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RecHit::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RecHit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RecHit::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RecHit*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *RecHitEB::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *RecHitEB::Class_Name()
{
   return "RecHitEB";
}

//______________________________________________________________________________
const char *RecHitEB::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RecHitEB*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RecHitEB::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RecHitEB*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RecHitEB::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RecHitEB*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RecHitEB::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RecHitEB*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *RecHitEE::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *RecHitEE::Class_Name()
{
   return "RecHitEE";
}

//______________________________________________________________________________
const char *RecHitEE::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RecHitEE*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RecHitEE::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RecHitEE*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RecHitEE::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RecHitEE*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RecHitEE::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RecHitEE*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *RecHitHBHE::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *RecHitHBHE::Class_Name()
{
   return "RecHitHBHE";
}

//______________________________________________________________________________
const char *RecHitHBHE::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RecHitHBHE*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RecHitHBHE::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RecHitHBHE*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RecHitHBHE::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RecHitHBHE*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RecHitHBHE::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RecHitHBHE*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *RecHitHF::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *RecHitHF::Class_Name()
{
   return "RecHitHF";
}

//______________________________________________________________________________
const char *RecHitHF::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RecHitHF*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RecHitHF::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RecHitHF*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RecHitHF::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RecHitHF*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RecHitHF::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RecHitHF*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TowerHF::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TowerHF::Class_Name()
{
   return "TowerHF";
}

//______________________________________________________________________________
const char *TowerHF::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TowerHF*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TowerHF::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TowerHF*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TowerHF::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TowerHF*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TowerHF::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TowerHF*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *RecHitZDC::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *RecHitZDC::Class_Name()
{
   return "RecHitZDC";
}

//______________________________________________________________________________
const char *RecHitZDC::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RecHitZDC*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RecHitZDC::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RecHitZDC*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RecHitZDC::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RecHitZDC*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RecHitZDC::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RecHitZDC*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *DigiZDC::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *DigiZDC::Class_Name()
{
   return "DigiZDC";
}

//______________________________________________________________________________
const char *DigiZDC::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::DigiZDC*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int DigiZDC::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::DigiZDC*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void DigiZDC::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::DigiZDC*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *DigiZDC::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::DigiZDC*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *DigiCASTOR::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *DigiCASTOR::Class_Name()
{
   return "DigiCASTOR";
}

//______________________________________________________________________________
const char *DigiCASTOR::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::DigiCASTOR*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int DigiCASTOR::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::DigiCASTOR*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void DigiCASTOR::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::DigiCASTOR*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *DigiCASTOR::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::DigiCASTOR*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *RecHitCASTOR::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *RecHitCASTOR::Class_Name()
{
   return "RecHitCASTOR";
}

//______________________________________________________________________________
const char *RecHitCASTOR::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RecHitCASTOR*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RecHitCASTOR::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RecHitCASTOR*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RecHitCASTOR::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RecHitCASTOR*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RecHitCASTOR::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RecHitCASTOR*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TrackData::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TrackData::Class_Name()
{
   return "TrackData";
}

//______________________________________________________________________________
const char *TrackData::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TrackData*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TrackData::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TrackData*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TrackData::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TrackData*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TrackData::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TrackData*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *GenParticle::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *GenParticle::Class_Name()
{
   return "GenParticle";
}

//______________________________________________________________________________
const char *GenParticle::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GenParticle*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int GenParticle::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GenParticle*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void GenParticle::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GenParticle*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *GenParticle::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GenParticle*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *AnalysisEvent::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *AnalysisEvent::Class_Name()
{
   return "AnalysisEvent";
}

//______________________________________________________________________________
const char *AnalysisEvent::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::AnalysisEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int AnalysisEvent::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::AnalysisEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void AnalysisEvent::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::AnalysisEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *AnalysisEvent::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::AnalysisEvent*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void CentralityData::Streamer(TBuffer &R__b)
{
   // Stream an object of class CentralityData.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(CentralityData::Class(),this);
   } else {
      R__b.WriteClassBuffer(CentralityData::Class(),this);
   }
}

//______________________________________________________________________________
void CentralityData::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class CentralityData.
      TClass *R__cl = ::CentralityData::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id", (void*)&id);
      R__insp.InspectMember("string", (void*)&id, "id.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cenBin", &cenBin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cenNpartic", &cenNpartic);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cenNpartSigma", &cenNpartSigma);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cenNcoll", &cenNcoll);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cenNcollSigma", &cenNcollSigma);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cenBpar", &cenBpar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cenBsigma", &cenBsigma);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_CentralityData(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::CentralityData : new ::CentralityData;
   }
   static void *newArray_CentralityData(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::CentralityData[nElements] : new ::CentralityData[nElements];
   }
   // Wrapper around operator delete
   static void delete_CentralityData(void *p) {
      delete ((::CentralityData*)p);
   }
   static void deleteArray_CentralityData(void *p) {
      delete [] ((::CentralityData*)p);
   }
   static void destruct_CentralityData(void *p) {
      typedef ::CentralityData current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::CentralityData

//______________________________________________________________________________
void RecHit::Streamer(TBuffer &R__b)
{
   // Stream an object of class RecHit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(RecHit::Class(),this);
   } else {
      R__b.WriteClassBuffer(RecHit::Class(),this);
   }
}

//______________________________________________________________________________
void RecHit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RecHit.
      TClass *R__cl = ::RecHit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Energy", &Energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Phi", &Phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Eta", &Eta);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_RecHit(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::RecHit : new ::RecHit;
   }
   static void *newArray_RecHit(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::RecHit[nElements] : new ::RecHit[nElements];
   }
   // Wrapper around operator delete
   static void delete_RecHit(void *p) {
      delete ((::RecHit*)p);
   }
   static void deleteArray_RecHit(void *p) {
      delete [] ((::RecHit*)p);
   }
   static void destruct_RecHit(void *p) {
      typedef ::RecHit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::RecHit

//______________________________________________________________________________
void RecHitEB::Streamer(TBuffer &R__b)
{
   // Stream an object of class RecHitEB.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(RecHitEB::Class(),this);
   } else {
      R__b.WriteClassBuffer(RecHitEB::Class(),this);
   }
}

//______________________________________________________________________________
void RecHitEB::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RecHitEB.
      TClass *R__cl = ::RecHitEB::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Iphi", &Iphi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Ieta", &Ieta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Time", &Time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Severity", &Severity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SwissCrx", &SwissCrx);
      RecHit::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_RecHitEB(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::RecHitEB : new ::RecHitEB;
   }
   static void *newArray_RecHitEB(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::RecHitEB[nElements] : new ::RecHitEB[nElements];
   }
   // Wrapper around operator delete
   static void delete_RecHitEB(void *p) {
      delete ((::RecHitEB*)p);
   }
   static void deleteArray_RecHitEB(void *p) {
      delete [] ((::RecHitEB*)p);
   }
   static void destruct_RecHitEB(void *p) {
      typedef ::RecHitEB current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::RecHitEB

//______________________________________________________________________________
void RecHitEE::Streamer(TBuffer &R__b)
{
   // Stream an object of class RecHitEE.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(RecHitEE::Class(),this);
   } else {
      R__b.WriteClassBuffer(RecHitEE::Class(),this);
   }
}

//______________________________________________________________________________
void RecHitEE::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RecHitEE.
      TClass *R__cl = ::RecHitEE::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Ix", &Ix);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Iy", &Iy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Time", &Time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Severity", &Severity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SwissCrx", &SwissCrx);
      RecHit::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_RecHitEE(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::RecHitEE : new ::RecHitEE;
   }
   static void *newArray_RecHitEE(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::RecHitEE[nElements] : new ::RecHitEE[nElements];
   }
   // Wrapper around operator delete
   static void delete_RecHitEE(void *p) {
      delete ((::RecHitEE*)p);
   }
   static void deleteArray_RecHitEE(void *p) {
      delete [] ((::RecHitEE*)p);
   }
   static void destruct_RecHitEE(void *p) {
      typedef ::RecHitEE current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::RecHitEE

//______________________________________________________________________________
void RecHitHBHE::Streamer(TBuffer &R__b)
{
   // Stream an object of class RecHitHBHE.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(RecHitHBHE::Class(),this);
   } else {
      R__b.WriteClassBuffer(RecHitHBHE::Class(),this);
   }
}

//______________________________________________________________________________
void RecHitHBHE::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RecHitHBHE.
      TClass *R__cl = ::RecHitHBHE::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Iphi", &Iphi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Ieta", &Ieta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Idepth", &Idepth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Saturation", &Saturation);
      RecHit::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_RecHitHBHE(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::RecHitHBHE : new ::RecHitHBHE;
   }
   static void *newArray_RecHitHBHE(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::RecHitHBHE[nElements] : new ::RecHitHBHE[nElements];
   }
   // Wrapper around operator delete
   static void delete_RecHitHBHE(void *p) {
      delete ((::RecHitHBHE*)p);
   }
   static void deleteArray_RecHitHBHE(void *p) {
      delete [] ((::RecHitHBHE*)p);
   }
   static void destruct_RecHitHBHE(void *p) {
      typedef ::RecHitHBHE current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::RecHitHBHE

//______________________________________________________________________________
void RecHitHF::Streamer(TBuffer &R__b)
{
   // Stream an object of class RecHitHF.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(RecHitHF::Class(),this);
   } else {
      R__b.WriteClassBuffer(RecHitHF::Class(),this);
   }
}

//______________________________________________________________________________
void RecHitHF::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RecHitHF.
      TClass *R__cl = ::RecHitHF::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Iphi", &Iphi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Ieta", &Ieta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Idepth", &Idepth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Saturation", &Saturation);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PMThitLS", &PMThitLS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PMThitTime", &PMThitTime);
      RecHit::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_RecHitHF(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::RecHitHF : new ::RecHitHF;
   }
   static void *newArray_RecHitHF(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::RecHitHF[nElements] : new ::RecHitHF[nElements];
   }
   // Wrapper around operator delete
   static void delete_RecHitHF(void *p) {
      delete ((::RecHitHF*)p);
   }
   static void deleteArray_RecHitHF(void *p) {
      delete [] ((::RecHitHF*)p);
   }
   static void destruct_RecHitHF(void *p) {
      typedef ::RecHitHF current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::RecHitHF

//______________________________________________________________________________
void TowerHF::Streamer(TBuffer &R__b)
{
   // Stream an object of class TowerHF.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TowerHF::Class(),this);
   } else {
      R__b.WriteClassBuffer(TowerHF::Class(),this);
   }
}

//______________________________________________________________________________
void TowerHF::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TowerHF.
      TClass *R__cl = ::TowerHF::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Energy", &Energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pt", &Pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Phi", &Phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Eta", &Eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "IetaAbs", &IetaAbs);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TowerHF(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TowerHF : new ::TowerHF;
   }
   static void *newArray_TowerHF(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TowerHF[nElements] : new ::TowerHF[nElements];
   }
   // Wrapper around operator delete
   static void delete_TowerHF(void *p) {
      delete ((::TowerHF*)p);
   }
   static void deleteArray_TowerHF(void *p) {
      delete [] ((::TowerHF*)p);
   }
   static void destruct_TowerHF(void *p) {
      typedef ::TowerHF current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TowerHF

//______________________________________________________________________________
void RecHitZDC::Streamer(TBuffer &R__b)
{
   // Stream an object of class RecHitZDC.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(RecHitZDC::Class(),this);
   } else {
      R__b.WriteClassBuffer(RecHitZDC::Class(),this);
   }
}

//______________________________________________________________________________
void RecHitZDC::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RecHitZDC.
      TClass *R__cl = ::RecHitZDC::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Isection", &Isection);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Ichannel", &Ichannel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Saturation", &Saturation);
      RecHit::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_RecHitZDC(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::RecHitZDC : new ::RecHitZDC;
   }
   static void *newArray_RecHitZDC(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::RecHitZDC[nElements] : new ::RecHitZDC[nElements];
   }
   // Wrapper around operator delete
   static void delete_RecHitZDC(void *p) {
      delete ((::RecHitZDC*)p);
   }
   static void deleteArray_RecHitZDC(void *p) {
      delete [] ((::RecHitZDC*)p);
   }
   static void destruct_RecHitZDC(void *p) {
      typedef ::RecHitZDC current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::RecHitZDC

//______________________________________________________________________________
void DigiZDC::Streamer(TBuffer &R__b)
{
   // Stream an object of class DigiZDC.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(DigiZDC::Class(),this);
   } else {
      R__b.WriteClassBuffer(DigiZDC::Class(),this);
   }
}

//______________________________________________________________________________
void DigiZDC::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class DigiZDC.
      TClass *R__cl = ::DigiZDC::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FC[10]", FC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ADC[10]", ADC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Iside", &Iside);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Isection", &Isection);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Ichannel", &Ichannel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "CapIdTs0", &CapIdTs0);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_DigiZDC(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::DigiZDC : new ::DigiZDC;
   }
   static void *newArray_DigiZDC(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::DigiZDC[nElements] : new ::DigiZDC[nElements];
   }
   // Wrapper around operator delete
   static void delete_DigiZDC(void *p) {
      delete ((::DigiZDC*)p);
   }
   static void deleteArray_DigiZDC(void *p) {
      delete [] ((::DigiZDC*)p);
   }
   static void destruct_DigiZDC(void *p) {
      typedef ::DigiZDC current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::DigiZDC

//______________________________________________________________________________
void DigiCASTOR::Streamer(TBuffer &R__b)
{
   // Stream an object of class DigiCASTOR.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(DigiCASTOR::Class(),this);
   } else {
      R__b.WriteClassBuffer(DigiCASTOR::Class(),this);
   }
}

//______________________________________________________________________________
void DigiCASTOR::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class DigiCASTOR.
      TClass *R__cl = ::DigiCASTOR::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FC[10]", FC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ADC[10]", ADC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Sector", &Sector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Module", &Module);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "CapIdTs0", &CapIdTs0);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_DigiCASTOR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::DigiCASTOR : new ::DigiCASTOR;
   }
   static void *newArray_DigiCASTOR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::DigiCASTOR[nElements] : new ::DigiCASTOR[nElements];
   }
   // Wrapper around operator delete
   static void delete_DigiCASTOR(void *p) {
      delete ((::DigiCASTOR*)p);
   }
   static void deleteArray_DigiCASTOR(void *p) {
      delete [] ((::DigiCASTOR*)p);
   }
   static void destruct_DigiCASTOR(void *p) {
      typedef ::DigiCASTOR current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::DigiCASTOR

//______________________________________________________________________________
void RecHitCASTOR::Streamer(TBuffer &R__b)
{
   // Stream an object of class RecHitCASTOR.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(RecHitCASTOR::Class(),this);
   } else {
      R__b.WriteClassBuffer(RecHitCASTOR::Class(),this);
   }
}

//______________________________________________________________________________
void RecHitCASTOR::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RecHitCASTOR.
      TClass *R__cl = ::RecHitCASTOR::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Time", &Time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Sector", &Sector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Module", &Module);
      RecHit::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_RecHitCASTOR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::RecHitCASTOR : new ::RecHitCASTOR;
   }
   static void *newArray_RecHitCASTOR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::RecHitCASTOR[nElements] : new ::RecHitCASTOR[nElements];
   }
   // Wrapper around operator delete
   static void delete_RecHitCASTOR(void *p) {
      delete ((::RecHitCASTOR*)p);
   }
   static void deleteArray_RecHitCASTOR(void *p) {
      delete [] ((::RecHitCASTOR*)p);
   }
   static void destruct_RecHitCASTOR(void *p) {
      typedef ::RecHitCASTOR current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::RecHitCASTOR

//______________________________________________________________________________
void TrackData::Streamer(TBuffer &R__b)
{
   // Stream an object of class TrackData.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TrackData::Class(),this);
   } else {
      R__b.WriteClassBuffer(TrackData::Class(),this);
   }
}

//______________________________________________________________________________
void TrackData::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TrackData.
      TClass *R__cl = ::TrackData::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pt", &Pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Eta", &Eta);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TrackData(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TrackData : new ::TrackData;
   }
   static void *newArray_TrackData(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TrackData[nElements] : new ::TrackData[nElements];
   }
   // Wrapper around operator delete
   static void delete_TrackData(void *p) {
      delete ((::TrackData*)p);
   }
   static void deleteArray_TrackData(void *p) {
      delete [] ((::TrackData*)p);
   }
   static void destruct_TrackData(void *p) {
      typedef ::TrackData current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TrackData

//______________________________________________________________________________
void GenParticle::Streamer(TBuffer &R__b)
{
   // Stream an object of class GenParticle.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GenParticle::Class(),this);
   } else {
      R__b.WriteClassBuffer(GenParticle::Class(),this);
   }
}

//______________________________________________________________________________
void GenParticle::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class GenParticle.
      TClass *R__cl = ::GenParticle::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Id", &Id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Status", &Status);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Px", &Px);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Py", &Py);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pz", &Pz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fProp", &fProp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_GenParticle(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::GenParticle : new ::GenParticle;
   }
   static void *newArray_GenParticle(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::GenParticle[nElements] : new ::GenParticle[nElements];
   }
   // Wrapper around operator delete
   static void delete_GenParticle(void *p) {
      delete ((::GenParticle*)p);
   }
   static void deleteArray_GenParticle(void *p) {
      delete [] ((::GenParticle*)p);
   }
   static void destruct_GenParticle(void *p) {
      typedef ::GenParticle current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GenParticle

//______________________________________________________________________________
void AnalysisEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class AnalysisEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(AnalysisEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(AnalysisEvent::Class(),this);
   }
}

//______________________________________________________________________________
void AnalysisEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class AnalysisEvent.
      TClass *R__cl = ::AnalysisEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "runNb", &runNb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "evtNb", &evtNb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bxNb", &bxNb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "orbitNb", &orbitNb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lumiNb", &lumiNb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "time", &time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cenHf", &cenHf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cenHft", &cenHft);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cenHftp", &cenHftp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cenHftm", &cenHftm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cenEb", &cenEb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cenEe", &cenEe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cenEep", &cenEep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cenEem", &cenEem);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cenZdc", &cenZdc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cenZdcm", &cenZdcm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cenZdcp", &cenZdcp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cenNpix", &cenNpix);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cenEt", &cenEt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Centrality", (void*)&Centrality);
      R__insp.InspectMember("vector<CentralityData>", (void*)&Centrality, "Centrality.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hasEventPlane", &hasEventPlane);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "evtPlaneTracksMidEta", &evtPlaneTracksMidEta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "evtPlaneHF", &evtPlaneHF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hasDetData", &hasDetData);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EB", (void*)&EB);
      R__insp.InspectMember("vector<RecHitEB>", (void*)&EB, "EB.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EE", (void*)&EE);
      R__insp.InspectMember("vector<RecHitEE>", (void*)&EE, "EE.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hbheNoiseFilter", &hbheNoiseFilter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "HBHE", (void*)&HBHE);
      R__insp.InspectMember("vector<RecHitHBHE>", (void*)&HBHE, "HBHE.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "HF", (void*)&HF);
      R__insp.InspectMember("vector<RecHitHF>", (void*)&HF, "HF.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "HFtowers", (void*)&HFtowers);
      R__insp.InspectMember("vector<TowerHF>", (void*)&HFtowers, "HFtowers.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ZDC", (void*)&ZDC);
      R__insp.InspectMember("vector<RecHitZDC>", (void*)&ZDC, "ZDC.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ZDCdigis", (void*)&ZDCdigis);
      R__insp.InspectMember("vector<DigiZDC>", (void*)&ZDCdigis, "ZDCdigis.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nbCasCalPresamples", &nbCasCalPresamples);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "CASTORdigis", (void*)&CASTORdigis);
      R__insp.InspectMember("vector<DigiCASTOR>", (void*)&CASTORdigis, "CASTORdigis.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "CASTOR", (void*)&CASTOR);
      R__insp.InspectMember("vector<RecHitCASTOR>", (void*)&CASTOR, "CASTOR.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Tracks", (void*)&Tracks);
      R__insp.InspectMember("vector<TrackData>", (void*)&Tracks, "Tracks.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nVertex", &nVertex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vertexX", &vertexX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vertexY", &vertexY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vertexZ", &vertexZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vertexXe", &vertexXe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vertexYe", &vertexYe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vertexZe", &vertexZe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vertexIsFake", &vertexIsFake);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isMC", &isMC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "genImpactParameter", &genImpactParameter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "genNpart", &genNpart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "genProcessID", &genProcessID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GEN", (void*)&GEN);
      R__insp.InspectMember("vector<GenParticle>", (void*)&GEN, "GEN.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hltAccept[200]", hltAccept);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hltPrescl[200]", hltPrescl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "algDecision[128]", algDecision);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "algDecisionB4mask[128]", algDecisionB4mask);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "algPrescale[128]", algPrescale);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ttDecision[64]", ttDecision);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ttDecisionB4mask[64]", ttDecisionB4mask);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ttPrescale[64]", ttPrescale);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "instLuminosity", &instLuminosity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "instLuminosityCorr", &instLuminosityCorr);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_AnalysisEvent(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::AnalysisEvent : new ::AnalysisEvent;
   }
   static void *newArray_AnalysisEvent(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::AnalysisEvent[nElements] : new ::AnalysisEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_AnalysisEvent(void *p) {
      delete ((::AnalysisEvent*)p);
   }
   static void deleteArray_AnalysisEvent(void *p) {
      delete [] ((::AnalysisEvent*)p);
   }
   static void destruct_AnalysisEvent(void *p) {
      typedef ::AnalysisEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::AnalysisEvent

namespace ROOT {
   void vectorlECentralityDatagR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlECentralityDatagR_Dictionary();
   static void *new_vectorlECentralityDatagR(void *p = 0);
   static void *newArray_vectorlECentralityDatagR(Long_t size, void *p);
   static void delete_vectorlECentralityDatagR(void *p);
   static void deleteArray_vectorlECentralityDatagR(void *p);
   static void destruct_vectorlECentralityDatagR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<CentralityData>*)
   {
      vector<CentralityData> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<CentralityData>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<CentralityData>", -2, "prec_stl/vector", 49,
                  typeid(vector<CentralityData>), DefineBehavior(ptr, ptr),
                  0, &vectorlECentralityDatagR_Dictionary, isa_proxy, 0,
                  sizeof(vector<CentralityData>) );
      instance.SetNew(&new_vectorlECentralityDatagR);
      instance.SetNewArray(&newArray_vectorlECentralityDatagR);
      instance.SetDelete(&delete_vectorlECentralityDatagR);
      instance.SetDeleteArray(&deleteArray_vectorlECentralityDatagR);
      instance.SetDestructor(&destruct_vectorlECentralityDatagR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<CentralityData> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<CentralityData>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlECentralityDatagR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<CentralityData>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlECentralityDatagR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<CentralityData> : new vector<CentralityData>;
   }
   static void *newArray_vectorlECentralityDatagR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<CentralityData>[nElements] : new vector<CentralityData>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlECentralityDatagR(void *p) {
      delete ((vector<CentralityData>*)p);
   }
   static void deleteArray_vectorlECentralityDatagR(void *p) {
      delete [] ((vector<CentralityData>*)p);
   }
   static void destruct_vectorlECentralityDatagR(void *p) {
      typedef vector<CentralityData> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<CentralityData>

namespace ROOT {
   void vectorlEDigiCASTORgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEDigiCASTORgR_Dictionary();
   static void *new_vectorlEDigiCASTORgR(void *p = 0);
   static void *newArray_vectorlEDigiCASTORgR(Long_t size, void *p);
   static void delete_vectorlEDigiCASTORgR(void *p);
   static void deleteArray_vectorlEDigiCASTORgR(void *p);
   static void destruct_vectorlEDigiCASTORgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<DigiCASTOR>*)
   {
      vector<DigiCASTOR> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<DigiCASTOR>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<DigiCASTOR>", -2, "prec_stl/vector", 49,
                  typeid(vector<DigiCASTOR>), DefineBehavior(ptr, ptr),
                  0, &vectorlEDigiCASTORgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<DigiCASTOR>) );
      instance.SetNew(&new_vectorlEDigiCASTORgR);
      instance.SetNewArray(&newArray_vectorlEDigiCASTORgR);
      instance.SetDelete(&delete_vectorlEDigiCASTORgR);
      instance.SetDeleteArray(&deleteArray_vectorlEDigiCASTORgR);
      instance.SetDestructor(&destruct_vectorlEDigiCASTORgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<DigiCASTOR> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<DigiCASTOR>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEDigiCASTORgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<DigiCASTOR>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEDigiCASTORgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<DigiCASTOR> : new vector<DigiCASTOR>;
   }
   static void *newArray_vectorlEDigiCASTORgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<DigiCASTOR>[nElements] : new vector<DigiCASTOR>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEDigiCASTORgR(void *p) {
      delete ((vector<DigiCASTOR>*)p);
   }
   static void deleteArray_vectorlEDigiCASTORgR(void *p) {
      delete [] ((vector<DigiCASTOR>*)p);
   }
   static void destruct_vectorlEDigiCASTORgR(void *p) {
      typedef vector<DigiCASTOR> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<DigiCASTOR>

namespace ROOT {
   void vectorlEDigiZDCgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEDigiZDCgR_Dictionary();
   static void *new_vectorlEDigiZDCgR(void *p = 0);
   static void *newArray_vectorlEDigiZDCgR(Long_t size, void *p);
   static void delete_vectorlEDigiZDCgR(void *p);
   static void deleteArray_vectorlEDigiZDCgR(void *p);
   static void destruct_vectorlEDigiZDCgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<DigiZDC>*)
   {
      vector<DigiZDC> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<DigiZDC>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<DigiZDC>", -2, "prec_stl/vector", 49,
                  typeid(vector<DigiZDC>), DefineBehavior(ptr, ptr),
                  0, &vectorlEDigiZDCgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<DigiZDC>) );
      instance.SetNew(&new_vectorlEDigiZDCgR);
      instance.SetNewArray(&newArray_vectorlEDigiZDCgR);
      instance.SetDelete(&delete_vectorlEDigiZDCgR);
      instance.SetDeleteArray(&deleteArray_vectorlEDigiZDCgR);
      instance.SetDestructor(&destruct_vectorlEDigiZDCgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<DigiZDC> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<DigiZDC>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEDigiZDCgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<DigiZDC>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEDigiZDCgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<DigiZDC> : new vector<DigiZDC>;
   }
   static void *newArray_vectorlEDigiZDCgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<DigiZDC>[nElements] : new vector<DigiZDC>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEDigiZDCgR(void *p) {
      delete ((vector<DigiZDC>*)p);
   }
   static void deleteArray_vectorlEDigiZDCgR(void *p) {
      delete [] ((vector<DigiZDC>*)p);
   }
   static void destruct_vectorlEDigiZDCgR(void *p) {
      typedef vector<DigiZDC> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<DigiZDC>

namespace ROOT {
   void vectorlEGenParticlegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEGenParticlegR_Dictionary();
   static void *new_vectorlEGenParticlegR(void *p = 0);
   static void *newArray_vectorlEGenParticlegR(Long_t size, void *p);
   static void delete_vectorlEGenParticlegR(void *p);
   static void deleteArray_vectorlEGenParticlegR(void *p);
   static void destruct_vectorlEGenParticlegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<GenParticle>*)
   {
      vector<GenParticle> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<GenParticle>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<GenParticle>", -2, "prec_stl/vector", 49,
                  typeid(vector<GenParticle>), DefineBehavior(ptr, ptr),
                  0, &vectorlEGenParticlegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<GenParticle>) );
      instance.SetNew(&new_vectorlEGenParticlegR);
      instance.SetNewArray(&newArray_vectorlEGenParticlegR);
      instance.SetDelete(&delete_vectorlEGenParticlegR);
      instance.SetDeleteArray(&deleteArray_vectorlEGenParticlegR);
      instance.SetDestructor(&destruct_vectorlEGenParticlegR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<GenParticle> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<GenParticle>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEGenParticlegR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<GenParticle>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEGenParticlegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<GenParticle> : new vector<GenParticle>;
   }
   static void *newArray_vectorlEGenParticlegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<GenParticle>[nElements] : new vector<GenParticle>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEGenParticlegR(void *p) {
      delete ((vector<GenParticle>*)p);
   }
   static void deleteArray_vectorlEGenParticlegR(void *p) {
      delete [] ((vector<GenParticle>*)p);
   }
   static void destruct_vectorlEGenParticlegR(void *p) {
      typedef vector<GenParticle> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<GenParticle>

namespace ROOT {
   void vectorlERecHitCASTORgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlERecHitCASTORgR_Dictionary();
   static void *new_vectorlERecHitCASTORgR(void *p = 0);
   static void *newArray_vectorlERecHitCASTORgR(Long_t size, void *p);
   static void delete_vectorlERecHitCASTORgR(void *p);
   static void deleteArray_vectorlERecHitCASTORgR(void *p);
   static void destruct_vectorlERecHitCASTORgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<RecHitCASTOR>*)
   {
      vector<RecHitCASTOR> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<RecHitCASTOR>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<RecHitCASTOR>", -2, "prec_stl/vector", 49,
                  typeid(vector<RecHitCASTOR>), DefineBehavior(ptr, ptr),
                  0, &vectorlERecHitCASTORgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<RecHitCASTOR>) );
      instance.SetNew(&new_vectorlERecHitCASTORgR);
      instance.SetNewArray(&newArray_vectorlERecHitCASTORgR);
      instance.SetDelete(&delete_vectorlERecHitCASTORgR);
      instance.SetDeleteArray(&deleteArray_vectorlERecHitCASTORgR);
      instance.SetDestructor(&destruct_vectorlERecHitCASTORgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<RecHitCASTOR> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<RecHitCASTOR>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlERecHitCASTORgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<RecHitCASTOR>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlERecHitCASTORgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RecHitCASTOR> : new vector<RecHitCASTOR>;
   }
   static void *newArray_vectorlERecHitCASTORgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RecHitCASTOR>[nElements] : new vector<RecHitCASTOR>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlERecHitCASTORgR(void *p) {
      delete ((vector<RecHitCASTOR>*)p);
   }
   static void deleteArray_vectorlERecHitCASTORgR(void *p) {
      delete [] ((vector<RecHitCASTOR>*)p);
   }
   static void destruct_vectorlERecHitCASTORgR(void *p) {
      typedef vector<RecHitCASTOR> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<RecHitCASTOR>

namespace ROOT {
   void vectorlERecHitEBgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlERecHitEBgR_Dictionary();
   static void *new_vectorlERecHitEBgR(void *p = 0);
   static void *newArray_vectorlERecHitEBgR(Long_t size, void *p);
   static void delete_vectorlERecHitEBgR(void *p);
   static void deleteArray_vectorlERecHitEBgR(void *p);
   static void destruct_vectorlERecHitEBgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<RecHitEB>*)
   {
      vector<RecHitEB> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<RecHitEB>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<RecHitEB>", -2, "prec_stl/vector", 49,
                  typeid(vector<RecHitEB>), DefineBehavior(ptr, ptr),
                  0, &vectorlERecHitEBgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<RecHitEB>) );
      instance.SetNew(&new_vectorlERecHitEBgR);
      instance.SetNewArray(&newArray_vectorlERecHitEBgR);
      instance.SetDelete(&delete_vectorlERecHitEBgR);
      instance.SetDeleteArray(&deleteArray_vectorlERecHitEBgR);
      instance.SetDestructor(&destruct_vectorlERecHitEBgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<RecHitEB> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<RecHitEB>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlERecHitEBgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<RecHitEB>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlERecHitEBgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RecHitEB> : new vector<RecHitEB>;
   }
   static void *newArray_vectorlERecHitEBgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RecHitEB>[nElements] : new vector<RecHitEB>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlERecHitEBgR(void *p) {
      delete ((vector<RecHitEB>*)p);
   }
   static void deleteArray_vectorlERecHitEBgR(void *p) {
      delete [] ((vector<RecHitEB>*)p);
   }
   static void destruct_vectorlERecHitEBgR(void *p) {
      typedef vector<RecHitEB> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<RecHitEB>

namespace ROOT {
   void vectorlERecHitEEgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlERecHitEEgR_Dictionary();
   static void *new_vectorlERecHitEEgR(void *p = 0);
   static void *newArray_vectorlERecHitEEgR(Long_t size, void *p);
   static void delete_vectorlERecHitEEgR(void *p);
   static void deleteArray_vectorlERecHitEEgR(void *p);
   static void destruct_vectorlERecHitEEgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<RecHitEE>*)
   {
      vector<RecHitEE> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<RecHitEE>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<RecHitEE>", -2, "prec_stl/vector", 49,
                  typeid(vector<RecHitEE>), DefineBehavior(ptr, ptr),
                  0, &vectorlERecHitEEgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<RecHitEE>) );
      instance.SetNew(&new_vectorlERecHitEEgR);
      instance.SetNewArray(&newArray_vectorlERecHitEEgR);
      instance.SetDelete(&delete_vectorlERecHitEEgR);
      instance.SetDeleteArray(&deleteArray_vectorlERecHitEEgR);
      instance.SetDestructor(&destruct_vectorlERecHitEEgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<RecHitEE> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<RecHitEE>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlERecHitEEgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<RecHitEE>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlERecHitEEgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RecHitEE> : new vector<RecHitEE>;
   }
   static void *newArray_vectorlERecHitEEgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RecHitEE>[nElements] : new vector<RecHitEE>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlERecHitEEgR(void *p) {
      delete ((vector<RecHitEE>*)p);
   }
   static void deleteArray_vectorlERecHitEEgR(void *p) {
      delete [] ((vector<RecHitEE>*)p);
   }
   static void destruct_vectorlERecHitEEgR(void *p) {
      typedef vector<RecHitEE> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<RecHitEE>

namespace ROOT {
   void vectorlERecHitHBHEgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlERecHitHBHEgR_Dictionary();
   static void *new_vectorlERecHitHBHEgR(void *p = 0);
   static void *newArray_vectorlERecHitHBHEgR(Long_t size, void *p);
   static void delete_vectorlERecHitHBHEgR(void *p);
   static void deleteArray_vectorlERecHitHBHEgR(void *p);
   static void destruct_vectorlERecHitHBHEgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<RecHitHBHE>*)
   {
      vector<RecHitHBHE> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<RecHitHBHE>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<RecHitHBHE>", -2, "prec_stl/vector", 49,
                  typeid(vector<RecHitHBHE>), DefineBehavior(ptr, ptr),
                  0, &vectorlERecHitHBHEgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<RecHitHBHE>) );
      instance.SetNew(&new_vectorlERecHitHBHEgR);
      instance.SetNewArray(&newArray_vectorlERecHitHBHEgR);
      instance.SetDelete(&delete_vectorlERecHitHBHEgR);
      instance.SetDeleteArray(&deleteArray_vectorlERecHitHBHEgR);
      instance.SetDestructor(&destruct_vectorlERecHitHBHEgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<RecHitHBHE> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<RecHitHBHE>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlERecHitHBHEgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<RecHitHBHE>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlERecHitHBHEgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RecHitHBHE> : new vector<RecHitHBHE>;
   }
   static void *newArray_vectorlERecHitHBHEgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RecHitHBHE>[nElements] : new vector<RecHitHBHE>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlERecHitHBHEgR(void *p) {
      delete ((vector<RecHitHBHE>*)p);
   }
   static void deleteArray_vectorlERecHitHBHEgR(void *p) {
      delete [] ((vector<RecHitHBHE>*)p);
   }
   static void destruct_vectorlERecHitHBHEgR(void *p) {
      typedef vector<RecHitHBHE> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<RecHitHBHE>

namespace ROOT {
   void vectorlERecHitHFgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlERecHitHFgR_Dictionary();
   static void *new_vectorlERecHitHFgR(void *p = 0);
   static void *newArray_vectorlERecHitHFgR(Long_t size, void *p);
   static void delete_vectorlERecHitHFgR(void *p);
   static void deleteArray_vectorlERecHitHFgR(void *p);
   static void destruct_vectorlERecHitHFgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<RecHitHF>*)
   {
      vector<RecHitHF> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<RecHitHF>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<RecHitHF>", -2, "prec_stl/vector", 49,
                  typeid(vector<RecHitHF>), DefineBehavior(ptr, ptr),
                  0, &vectorlERecHitHFgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<RecHitHF>) );
      instance.SetNew(&new_vectorlERecHitHFgR);
      instance.SetNewArray(&newArray_vectorlERecHitHFgR);
      instance.SetDelete(&delete_vectorlERecHitHFgR);
      instance.SetDeleteArray(&deleteArray_vectorlERecHitHFgR);
      instance.SetDestructor(&destruct_vectorlERecHitHFgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<RecHitHF> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<RecHitHF>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlERecHitHFgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<RecHitHF>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlERecHitHFgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RecHitHF> : new vector<RecHitHF>;
   }
   static void *newArray_vectorlERecHitHFgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RecHitHF>[nElements] : new vector<RecHitHF>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlERecHitHFgR(void *p) {
      delete ((vector<RecHitHF>*)p);
   }
   static void deleteArray_vectorlERecHitHFgR(void *p) {
      delete [] ((vector<RecHitHF>*)p);
   }
   static void destruct_vectorlERecHitHFgR(void *p) {
      typedef vector<RecHitHF> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<RecHitHF>

namespace ROOT {
   void vectorlERecHitZDCgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlERecHitZDCgR_Dictionary();
   static void *new_vectorlERecHitZDCgR(void *p = 0);
   static void *newArray_vectorlERecHitZDCgR(Long_t size, void *p);
   static void delete_vectorlERecHitZDCgR(void *p);
   static void deleteArray_vectorlERecHitZDCgR(void *p);
   static void destruct_vectorlERecHitZDCgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<RecHitZDC>*)
   {
      vector<RecHitZDC> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<RecHitZDC>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<RecHitZDC>", -2, "prec_stl/vector", 49,
                  typeid(vector<RecHitZDC>), DefineBehavior(ptr, ptr),
                  0, &vectorlERecHitZDCgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<RecHitZDC>) );
      instance.SetNew(&new_vectorlERecHitZDCgR);
      instance.SetNewArray(&newArray_vectorlERecHitZDCgR);
      instance.SetDelete(&delete_vectorlERecHitZDCgR);
      instance.SetDeleteArray(&deleteArray_vectorlERecHitZDCgR);
      instance.SetDestructor(&destruct_vectorlERecHitZDCgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<RecHitZDC> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<RecHitZDC>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlERecHitZDCgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<RecHitZDC>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlERecHitZDCgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RecHitZDC> : new vector<RecHitZDC>;
   }
   static void *newArray_vectorlERecHitZDCgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RecHitZDC>[nElements] : new vector<RecHitZDC>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlERecHitZDCgR(void *p) {
      delete ((vector<RecHitZDC>*)p);
   }
   static void deleteArray_vectorlERecHitZDCgR(void *p) {
      delete [] ((vector<RecHitZDC>*)p);
   }
   static void destruct_vectorlERecHitZDCgR(void *p) {
      typedef vector<RecHitZDC> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<RecHitZDC>

namespace ROOT {
   void vectorlETowerHFgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETowerHFgR_Dictionary();
   static void *new_vectorlETowerHFgR(void *p = 0);
   static void *newArray_vectorlETowerHFgR(Long_t size, void *p);
   static void delete_vectorlETowerHFgR(void *p);
   static void deleteArray_vectorlETowerHFgR(void *p);
   static void destruct_vectorlETowerHFgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<TowerHF>*)
   {
      vector<TowerHF> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TowerHF>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TowerHF>", -2, "prec_stl/vector", 49,
                  typeid(vector<TowerHF>), DefineBehavior(ptr, ptr),
                  0, &vectorlETowerHFgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TowerHF>) );
      instance.SetNew(&new_vectorlETowerHFgR);
      instance.SetNewArray(&newArray_vectorlETowerHFgR);
      instance.SetDelete(&delete_vectorlETowerHFgR);
      instance.SetDeleteArray(&deleteArray_vectorlETowerHFgR);
      instance.SetDestructor(&destruct_vectorlETowerHFgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<TowerHF> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TowerHF>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETowerHFgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<TowerHF>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlETowerHFgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TowerHF> : new vector<TowerHF>;
   }
   static void *newArray_vectorlETowerHFgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TowerHF>[nElements] : new vector<TowerHF>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETowerHFgR(void *p) {
      delete ((vector<TowerHF>*)p);
   }
   static void deleteArray_vectorlETowerHFgR(void *p) {
      delete [] ((vector<TowerHF>*)p);
   }
   static void destruct_vectorlETowerHFgR(void *p) {
      typedef vector<TowerHF> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<TowerHF>

namespace ROOT {
   void vectorlETrackDatagR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETrackDatagR_Dictionary();
   static void *new_vectorlETrackDatagR(void *p = 0);
   static void *newArray_vectorlETrackDatagR(Long_t size, void *p);
   static void delete_vectorlETrackDatagR(void *p);
   static void deleteArray_vectorlETrackDatagR(void *p);
   static void destruct_vectorlETrackDatagR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<TrackData>*)
   {
      vector<TrackData> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TrackData>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TrackData>", -2, "prec_stl/vector", 49,
                  typeid(vector<TrackData>), DefineBehavior(ptr, ptr),
                  0, &vectorlETrackDatagR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TrackData>) );
      instance.SetNew(&new_vectorlETrackDatagR);
      instance.SetNewArray(&newArray_vectorlETrackDatagR);
      instance.SetDelete(&delete_vectorlETrackDatagR);
      instance.SetDeleteArray(&deleteArray_vectorlETrackDatagR);
      instance.SetDestructor(&destruct_vectorlETrackDatagR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<TrackData> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TrackData>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETrackDatagR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<TrackData>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlETrackDatagR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TrackData> : new vector<TrackData>;
   }
   static void *newArray_vectorlETrackDatagR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TrackData>[nElements] : new vector<TrackData>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETrackDatagR(void *p) {
      delete ((vector<TrackData>*)p);
   }
   static void deleteArray_vectorlETrackDatagR(void *p) {
      delete [] ((vector<TrackData>*)p);
   }
   static void destruct_vectorlETrackDatagR(void *p) {
      typedef vector<TrackData> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<TrackData>

/********************************************************
* CastorTreeVariablesDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableCastorTreeVariablesDict();

extern "C" void G__set_cpp_environmentCastorTreeVariablesDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("CastorTreeVariables.h");
  G__cpp_reset_tagtableCastorTreeVariablesDict();
}
#include <new>
extern "C" int G__cpp_dllrevCastorTreeVariablesDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* CentralityData */
static int G__CastorTreeVariablesDict_466_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CentralityData* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CentralityData[n];
     } else {
       p = new((void*) gvp) CentralityData[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CentralityData;
     } else {
       p = new((void*) gvp) CentralityData;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_CentralityData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_466_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) CentralityData::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_466_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CentralityData::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_466_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) CentralityData::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_466_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CentralityData::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_466_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const CentralityData*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_466_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralityData*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_466_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralityData*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_466_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralityData*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_466_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CentralityData::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_466_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CentralityData::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_466_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CentralityData::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_466_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CentralityData::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__CastorTreeVariablesDict_466_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   CentralityData* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new CentralityData(*(CentralityData*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_CentralityData));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CentralityData G__TCentralityData;
static int G__CastorTreeVariablesDict_466_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (CentralityData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CentralityData*) (soff+(sizeof(CentralityData)*i)))->~G__TCentralityData();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (CentralityData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((CentralityData*) (soff))->~G__TCentralityData();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__CastorTreeVariablesDict_466_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CentralityData* dest = (CentralityData*) G__getstructoffset();
   *dest = *(CentralityData*) libp->para[0].ref;
   const CentralityData& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RecHit */
static int G__CastorTreeVariablesDict_467_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RecHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RecHit[n];
     } else {
       p = new((void*) gvp) RecHit[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RecHit;
     } else {
       p = new((void*) gvp) RecHit;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_RecHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_467_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const RecHit*) G__getstructoffset())->GetEt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_467_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RecHit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_467_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RecHit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_467_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RecHit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_467_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RecHit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_467_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const RecHit*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_467_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RecHit*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_467_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RecHit*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_467_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RecHit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_467_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RecHit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_467_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RecHit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_467_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RecHit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_467_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RecHit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__CastorTreeVariablesDict_467_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RecHit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RecHit(*(RecHit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_RecHit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RecHit G__TRecHit;
static int G__CastorTreeVariablesDict_467_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RecHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RecHit*) (soff+(sizeof(RecHit)*i)))->~G__TRecHit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RecHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RecHit*) (soff))->~G__TRecHit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__CastorTreeVariablesDict_467_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RecHit* dest = (RecHit*) G__getstructoffset();
   *dest = *(RecHit*) libp->para[0].ref;
   const RecHit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RecHitEB */
static int G__CastorTreeVariablesDict_468_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RecHitEB* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RecHitEB[n];
     } else {
       p = new((void*) gvp) RecHitEB[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RecHitEB;
     } else {
       p = new((void*) gvp) RecHitEB;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_RecHitEB));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_468_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RecHitEB::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_468_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RecHitEB::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_468_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RecHitEB::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_468_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RecHitEB::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_468_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RecHitEB*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_468_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RecHitEB::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_468_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RecHitEB::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_468_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RecHitEB::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_468_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RecHitEB::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__CastorTreeVariablesDict_468_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RecHitEB* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RecHitEB(*(RecHitEB*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_RecHitEB));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RecHitEB G__TRecHitEB;
static int G__CastorTreeVariablesDict_468_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RecHitEB*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RecHitEB*) (soff+(sizeof(RecHitEB)*i)))->~G__TRecHitEB();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RecHitEB*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RecHitEB*) (soff))->~G__TRecHitEB();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__CastorTreeVariablesDict_468_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RecHitEB* dest = (RecHitEB*) G__getstructoffset();
   *dest = *(RecHitEB*) libp->para[0].ref;
   const RecHitEB& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RecHitEE */
static int G__CastorTreeVariablesDict_469_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RecHitEE* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RecHitEE[n];
     } else {
       p = new((void*) gvp) RecHitEE[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RecHitEE;
     } else {
       p = new((void*) gvp) RecHitEE;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_RecHitEE));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_469_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RecHitEE::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_469_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RecHitEE::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_469_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RecHitEE::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_469_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RecHitEE::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_469_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RecHitEE*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_469_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RecHitEE::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_469_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RecHitEE::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_469_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RecHitEE::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_469_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RecHitEE::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__CastorTreeVariablesDict_469_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RecHitEE* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RecHitEE(*(RecHitEE*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_RecHitEE));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RecHitEE G__TRecHitEE;
static int G__CastorTreeVariablesDict_469_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RecHitEE*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RecHitEE*) (soff+(sizeof(RecHitEE)*i)))->~G__TRecHitEE();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RecHitEE*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RecHitEE*) (soff))->~G__TRecHitEE();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__CastorTreeVariablesDict_469_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RecHitEE* dest = (RecHitEE*) G__getstructoffset();
   *dest = *(RecHitEE*) libp->para[0].ref;
   const RecHitEE& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RecHitHBHE */
static int G__CastorTreeVariablesDict_470_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RecHitHBHE* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RecHitHBHE[n];
     } else {
       p = new((void*) gvp) RecHitHBHE[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RecHitHBHE;
     } else {
       p = new((void*) gvp) RecHitHBHE;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_RecHitHBHE));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_470_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RecHitHBHE::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_470_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RecHitHBHE::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_470_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RecHitHBHE::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_470_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RecHitHBHE::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_470_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RecHitHBHE*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_470_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RecHitHBHE::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_470_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RecHitHBHE::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_470_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RecHitHBHE::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_470_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RecHitHBHE::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__CastorTreeVariablesDict_470_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RecHitHBHE* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RecHitHBHE(*(RecHitHBHE*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_RecHitHBHE));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RecHitHBHE G__TRecHitHBHE;
static int G__CastorTreeVariablesDict_470_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RecHitHBHE*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RecHitHBHE*) (soff+(sizeof(RecHitHBHE)*i)))->~G__TRecHitHBHE();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RecHitHBHE*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RecHitHBHE*) (soff))->~G__TRecHitHBHE();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__CastorTreeVariablesDict_470_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RecHitHBHE* dest = (RecHitHBHE*) G__getstructoffset();
   *dest = *(RecHitHBHE*) libp->para[0].ref;
   const RecHitHBHE& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RecHitHF */
static int G__CastorTreeVariablesDict_471_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RecHitHF* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RecHitHF[n];
     } else {
       p = new((void*) gvp) RecHitHF[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RecHitHF;
     } else {
       p = new((void*) gvp) RecHitHF;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_RecHitHF));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_471_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RecHitHF::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_471_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RecHitHF::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_471_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RecHitHF::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_471_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RecHitHF::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_471_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RecHitHF*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_471_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RecHitHF::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_471_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RecHitHF::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_471_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RecHitHF::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_471_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RecHitHF::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__CastorTreeVariablesDict_471_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RecHitHF* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RecHitHF(*(RecHitHF*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_RecHitHF));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RecHitHF G__TRecHitHF;
static int G__CastorTreeVariablesDict_471_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RecHitHF*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RecHitHF*) (soff+(sizeof(RecHitHF)*i)))->~G__TRecHitHF();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RecHitHF*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RecHitHF*) (soff))->~G__TRecHitHF();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__CastorTreeVariablesDict_471_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RecHitHF* dest = (RecHitHF*) G__getstructoffset();
   *dest = *(RecHitHF*) libp->para[0].ref;
   const RecHitHF& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TowerHF */
static int G__CastorTreeVariablesDict_472_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TowerHF* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TowerHF[n];
     } else {
       p = new((void*) gvp) TowerHF[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TowerHF;
     } else {
       p = new((void*) gvp) TowerHF;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_TowerHF));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_472_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TowerHF::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_472_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TowerHF::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_472_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TowerHF::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_472_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TowerHF::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_472_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TowerHF*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_472_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TowerHF*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_472_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TowerHF*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_472_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TowerHF*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_472_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TowerHF::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_472_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TowerHF::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_472_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TowerHF::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_472_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TowerHF::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__CastorTreeVariablesDict_472_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TowerHF* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TowerHF(*(TowerHF*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_TowerHF));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TowerHF G__TTowerHF;
static int G__CastorTreeVariablesDict_472_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TowerHF*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TowerHF*) (soff+(sizeof(TowerHF)*i)))->~G__TTowerHF();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TowerHF*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TowerHF*) (soff))->~G__TTowerHF();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__CastorTreeVariablesDict_472_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TowerHF* dest = (TowerHF*) G__getstructoffset();
   *dest = *(TowerHF*) libp->para[0].ref;
   const TowerHF& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RecHitZDC */
static int G__CastorTreeVariablesDict_473_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RecHitZDC* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RecHitZDC[n];
     } else {
       p = new((void*) gvp) RecHitZDC[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RecHitZDC;
     } else {
       p = new((void*) gvp) RecHitZDC;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_RecHitZDC));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_473_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RecHitZDC::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_473_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RecHitZDC::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_473_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RecHitZDC::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_473_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RecHitZDC::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_473_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RecHitZDC*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_473_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RecHitZDC::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_473_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RecHitZDC::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_473_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RecHitZDC::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_473_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RecHitZDC::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__CastorTreeVariablesDict_473_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RecHitZDC* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RecHitZDC(*(RecHitZDC*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_RecHitZDC));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RecHitZDC G__TRecHitZDC;
static int G__CastorTreeVariablesDict_473_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RecHitZDC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RecHitZDC*) (soff+(sizeof(RecHitZDC)*i)))->~G__TRecHitZDC();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RecHitZDC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RecHitZDC*) (soff))->~G__TRecHitZDC();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__CastorTreeVariablesDict_473_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RecHitZDC* dest = (RecHitZDC*) G__getstructoffset();
   *dest = *(RecHitZDC*) libp->para[0].ref;
   const RecHitZDC& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* DigiZDC */
static int G__CastorTreeVariablesDict_474_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DigiZDC* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DigiZDC[n];
     } else {
       p = new((void*) gvp) DigiZDC[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DigiZDC;
     } else {
       p = new((void*) gvp) DigiZDC;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_DigiZDC));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_474_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) DigiZDC::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_474_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DigiZDC::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_474_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) DigiZDC::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_474_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      DigiZDC::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_474_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const DigiZDC*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_474_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DigiZDC*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_474_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DigiZDC*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_474_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DigiZDC*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_474_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DigiZDC::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_474_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DigiZDC::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_474_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DigiZDC::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_474_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DigiZDC::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__CastorTreeVariablesDict_474_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   DigiZDC* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new DigiZDC(*(DigiZDC*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_DigiZDC));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef DigiZDC G__TDigiZDC;
static int G__CastorTreeVariablesDict_474_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (DigiZDC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((DigiZDC*) (soff+(sizeof(DigiZDC)*i)))->~G__TDigiZDC();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (DigiZDC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((DigiZDC*) (soff))->~G__TDigiZDC();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__CastorTreeVariablesDict_474_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DigiZDC* dest = (DigiZDC*) G__getstructoffset();
   *dest = *(DigiZDC*) libp->para[0].ref;
   const DigiZDC& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* DigiCASTOR */
static int G__CastorTreeVariablesDict_475_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DigiCASTOR* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DigiCASTOR[n];
     } else {
       p = new((void*) gvp) DigiCASTOR[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DigiCASTOR;
     } else {
       p = new((void*) gvp) DigiCASTOR;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_DigiCASTOR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_475_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) DigiCASTOR::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_475_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DigiCASTOR::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_475_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) DigiCASTOR::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_475_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      DigiCASTOR::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_475_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const DigiCASTOR*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_475_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DigiCASTOR*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_475_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DigiCASTOR*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_475_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DigiCASTOR*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_475_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DigiCASTOR::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_475_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DigiCASTOR::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_475_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DigiCASTOR::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_475_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DigiCASTOR::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__CastorTreeVariablesDict_475_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   DigiCASTOR* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new DigiCASTOR(*(DigiCASTOR*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_DigiCASTOR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef DigiCASTOR G__TDigiCASTOR;
static int G__CastorTreeVariablesDict_475_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (DigiCASTOR*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((DigiCASTOR*) (soff+(sizeof(DigiCASTOR)*i)))->~G__TDigiCASTOR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (DigiCASTOR*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((DigiCASTOR*) (soff))->~G__TDigiCASTOR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__CastorTreeVariablesDict_475_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DigiCASTOR* dest = (DigiCASTOR*) G__getstructoffset();
   *dest = *(DigiCASTOR*) libp->para[0].ref;
   const DigiCASTOR& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RecHitCASTOR */
static int G__CastorTreeVariablesDict_476_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RecHitCASTOR* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RecHitCASTOR[n];
     } else {
       p = new((void*) gvp) RecHitCASTOR[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RecHitCASTOR;
     } else {
       p = new((void*) gvp) RecHitCASTOR;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_RecHitCASTOR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_476_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RecHitCASTOR*) G__getstructoffset())->GetModuleId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_476_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RecHitCASTOR*) G__getstructoffset())->GetSectorId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_476_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RecHitCASTOR::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_476_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RecHitCASTOR::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_476_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RecHitCASTOR::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_476_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RecHitCASTOR::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_476_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RecHitCASTOR*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_476_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RecHitCASTOR::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_476_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RecHitCASTOR::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_476_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RecHitCASTOR::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_476_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RecHitCASTOR::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__CastorTreeVariablesDict_476_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RecHitCASTOR* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RecHitCASTOR(*(RecHitCASTOR*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_RecHitCASTOR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RecHitCASTOR G__TRecHitCASTOR;
static int G__CastorTreeVariablesDict_476_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RecHitCASTOR*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RecHitCASTOR*) (soff+(sizeof(RecHitCASTOR)*i)))->~G__TRecHitCASTOR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RecHitCASTOR*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RecHitCASTOR*) (soff))->~G__TRecHitCASTOR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__CastorTreeVariablesDict_476_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RecHitCASTOR* dest = (RecHitCASTOR*) G__getstructoffset();
   *dest = *(RecHitCASTOR*) libp->para[0].ref;
   const RecHitCASTOR& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TrackData */
static int G__CastorTreeVariablesDict_477_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TrackData* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TrackData[n];
     } else {
       p = new((void*) gvp) TrackData[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TrackData;
     } else {
       p = new((void*) gvp) TrackData;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_TrackData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_477_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TrackData::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_477_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TrackData::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_477_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TrackData::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_477_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TrackData::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_477_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TrackData*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_477_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TrackData*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_477_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TrackData*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_477_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TrackData*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_477_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TrackData::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_477_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TrackData::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_477_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TrackData::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_477_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TrackData::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__CastorTreeVariablesDict_477_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TrackData* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TrackData(*(TrackData*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_TrackData));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TrackData G__TTrackData;
static int G__CastorTreeVariablesDict_477_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TrackData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TrackData*) (soff+(sizeof(TrackData)*i)))->~G__TTrackData();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TrackData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TrackData*) (soff))->~G__TTrackData();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__CastorTreeVariablesDict_477_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TrackData* dest = (TrackData*) G__getstructoffset();
   *dest = *(TrackData*) libp->para[0].ref;
   const TrackData& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* GenParticle */
static int G__CastorTreeVariablesDict_478_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GenParticle* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GenParticle[n];
     } else {
       p = new((void*) gvp) GenParticle[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GenParticle;
     } else {
       p = new((void*) gvp) GenParticle;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_GenParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_478_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ParticleInfo::Properties& obj = ((const GenParticle*) G__getstructoffset())->GetProperties();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_478_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const GenParticle*) G__getstructoffset())->GetCosTheta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_478_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const GenParticle*) G__getstructoffset())->GetTheta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_478_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const GenParticle*) G__getstructoffset())->GetEta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_478_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const GenParticle*) G__getstructoffset())->GetRapidity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_478_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const GenParticle*) G__getstructoffset())->GetCharge());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_478_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const GenParticle*) G__getstructoffset())->GetMass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_478_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const GenParticle*) G__getstructoffset())->GetMomentum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_478_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const GenParticle*) G__getstructoffset())->GetEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_478_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const GenParticle*) G__getstructoffset())->GetPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_478_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const GenParticle*) G__getstructoffset())->GetTransverseEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_478_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const GenParticle*) G__getstructoffset())->GetTransverseMomentum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_478_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) GenParticle::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_478_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GenParticle::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_478_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) GenParticle::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_478_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      GenParticle::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_478_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const GenParticle*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_478_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GenParticle*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_478_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GenParticle*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_478_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GenParticle*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_478_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GenParticle::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_478_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GenParticle::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_478_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GenParticle::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_478_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GenParticle::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__CastorTreeVariablesDict_478_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   GenParticle* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new GenParticle(*(GenParticle*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_GenParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef GenParticle G__TGenParticle;
static int G__CastorTreeVariablesDict_478_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (GenParticle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((GenParticle*) (soff+(sizeof(GenParticle)*i)))->~G__TGenParticle();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (GenParticle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((GenParticle*) (soff))->~G__TGenParticle();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* AnalysisEvent */
static int G__CastorTreeVariablesDict_479_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AnalysisEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AnalysisEvent[n];
     } else {
       p = new((void*) gvp) AnalysisEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AnalysisEvent;
     } else {
       p = new((void*) gvp) AnalysisEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_AnalysisEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_479_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const CentralityData& obj = ((const AnalysisEvent*) G__getstructoffset())->GetCentrality(*(string*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_479_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const AnalysisEvent*) G__getstructoffset())->HasCentrality(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_479_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) AnalysisEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_479_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AnalysisEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_479_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) AnalysisEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_479_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      AnalysisEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_479_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const AnalysisEvent*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_479_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AnalysisEvent*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_479_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AnalysisEvent*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_479_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AnalysisEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_479_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AnalysisEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_479_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AnalysisEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_479_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AnalysisEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CastorTreeVariablesDict_479_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AnalysisEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__CastorTreeVariablesDict_479_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   AnalysisEvent* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new AnalysisEvent(*(AnalysisEvent*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_AnalysisEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef AnalysisEvent G__TAnalysisEvent;
static int G__CastorTreeVariablesDict_479_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (AnalysisEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((AnalysisEvent*) (soff+(sizeof(AnalysisEvent)*i)))->~G__TAnalysisEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (AnalysisEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((AnalysisEvent*) (soff))->~G__TAnalysisEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__CastorTreeVariablesDict_479_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AnalysisEvent* dest = (AnalysisEvent*) G__getstructoffset();
   *dest = *(AnalysisEvent*) libp->para[0].ref;
   const AnalysisEvent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* CentralityData */

/* RecHit */

/* RecHitEB */

/* RecHitEE */

/* RecHitHBHE */

/* RecHitHF */

/* TowerHF */

/* RecHitZDC */

/* DigiZDC */

/* DigiCASTOR */

/* RecHitCASTOR */

/* TrackData */

/* GenParticle */

/* AnalysisEvent */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncCastorTreeVariablesDict {
 public:
  G__Sizep2memfuncCastorTreeVariablesDict(): p(&G__Sizep2memfuncCastorTreeVariablesDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncCastorTreeVariablesDict::*p)();
};

size_t G__get_sizep2memfuncCastorTreeVariablesDict()
{
  G__Sizep2memfuncCastorTreeVariablesDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceCastorTreeVariablesDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_RecHitEB))) {
     RecHitEB *G__Lderived;
     G__Lderived=(RecHitEB*)0x1000;
     {
       RecHit *G__Lpbase=(RecHit*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_RecHitEB),G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_RecHit),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_RecHitEE))) {
     RecHitEE *G__Lderived;
     G__Lderived=(RecHitEE*)0x1000;
     {
       RecHit *G__Lpbase=(RecHit*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_RecHitEE),G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_RecHit),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_RecHitHBHE))) {
     RecHitHBHE *G__Lderived;
     G__Lderived=(RecHitHBHE*)0x1000;
     {
       RecHit *G__Lpbase=(RecHit*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_RecHitHBHE),G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_RecHit),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_RecHitHF))) {
     RecHitHF *G__Lderived;
     G__Lderived=(RecHitHF*)0x1000;
     {
       RecHit *G__Lpbase=(RecHit*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_RecHitHF),G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_RecHit),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_RecHitZDC))) {
     RecHitZDC *G__Lderived;
     G__Lderived=(RecHitZDC*)0x1000;
     {
       RecHit *G__Lpbase=(RecHit*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_RecHitZDC),G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_RecHit),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_RecHitCASTOR))) {
     RecHitCASTOR *G__Lderived;
     G__Lderived=(RecHitCASTOR*)0x1000;
     {
       RecHit *G__Lpbase=(RecHit*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_RecHitCASTOR),G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_RecHit),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableCastorTreeVariablesDict() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,Properties>",117,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_maplEintcOParticleInfocLcLPropertiescOlesslEintgRcOallocatorlEpairlEconstsPintcOParticleInfocLcLPropertiesgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,ParticleInfo::Properties>",117,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_maplEintcOParticleInfocLcLPropertiescOlesslEintgRcOallocatorlEpairlEconstsPintcOParticleInfocLcLPropertiesgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,ParticleInfo::Properties,less<int> >",117,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_maplEintcOParticleInfocLcLPropertiescOlesslEintgRcOallocatorlEpairlEconstsPintcOParticleInfocLcLPropertiesgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::set<int> >",117,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_vectorlEsetlEintcOlesslEintgRcOallocatorlEintgRsPgRcOallocatorlEsetlEintcOlesslEintgRcOallocatorlEintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlEsetlEintcOlesslEintgRcOallocatorlEintgRsPgRcOallocatorlEsetlEintcOlesslEintgRcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_vectorlEsetlEintcOlesslEintgRcOallocatorlEintgRsPgRcOallocatorlEsetlEintcOlesslEintgRcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlEsetlEintcOlesslEintgRcOallocatorlEintgRsPgRcOallocatorlEsetlEintcOlesslEintgRcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_vectorlEsetlEintcOlesslEintgRcOallocatorlEintgRsPgRcOallocatorlEsetlEintcOlesslEintgRcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<set<int,less<int>,allocator<int> > >",117,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_vectorlEsetlEintcOlesslEintgRcOallocatorlEintgRsPgRcOallocatorlEsetlEintcOlesslEintgRcOallocatorlEintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<CentralityData>",117,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_vectorlECentralityDatacOallocatorlECentralityDatagRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlECentralityDatacOallocatorlECentralityDatagRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_vectorlECentralityDatacOallocatorlECentralityDatagRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlECentralityDatacOallocatorlECentralityDatagRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_vectorlECentralityDatacOallocatorlECentralityDatagRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RecHitEB>",117,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_vectorlERecHitEBcOallocatorlERecHitEBgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlERecHitEBcOallocatorlERecHitEBgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_vectorlERecHitEBcOallocatorlERecHitEBgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlERecHitEBcOallocatorlERecHitEBgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_vectorlERecHitEBcOallocatorlERecHitEBgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RecHitEE>",117,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_vectorlERecHitEEcOallocatorlERecHitEEgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlERecHitEEcOallocatorlERecHitEEgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_vectorlERecHitEEcOallocatorlERecHitEEgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlERecHitEEcOallocatorlERecHitEEgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_vectorlERecHitEEcOallocatorlERecHitEEgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RecHitHBHE>",117,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_vectorlERecHitHBHEcOallocatorlERecHitHBHEgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlERecHitHBHEcOallocatorlERecHitHBHEgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_vectorlERecHitHBHEcOallocatorlERecHitHBHEgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlERecHitHBHEcOallocatorlERecHitHBHEgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_vectorlERecHitHBHEcOallocatorlERecHitHBHEgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RecHitHF>",117,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_vectorlERecHitHFcOallocatorlERecHitHFgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlERecHitHFcOallocatorlERecHitHFgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_vectorlERecHitHFcOallocatorlERecHitHFgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlERecHitHFcOallocatorlERecHitHFgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_vectorlERecHitHFcOallocatorlERecHitHFgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TowerHF>",117,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_vectorlETowerHFcOallocatorlETowerHFgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlETowerHFcOallocatorlETowerHFgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_vectorlETowerHFcOallocatorlETowerHFgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlETowerHFcOallocatorlETowerHFgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_vectorlETowerHFcOallocatorlETowerHFgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RecHitZDC>",117,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_vectorlERecHitZDCcOallocatorlERecHitZDCgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlERecHitZDCcOallocatorlERecHitZDCgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_vectorlERecHitZDCcOallocatorlERecHitZDCgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlERecHitZDCcOallocatorlERecHitZDCgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_vectorlERecHitZDCcOallocatorlERecHitZDCgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<DigiZDC>",117,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_vectorlEDigiZDCcOallocatorlEDigiZDCgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlEDigiZDCcOallocatorlEDigiZDCgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_vectorlEDigiZDCcOallocatorlEDigiZDCgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlEDigiZDCcOallocatorlEDigiZDCgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_vectorlEDigiZDCcOallocatorlEDigiZDCgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<DigiCASTOR>",117,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_vectorlEDigiCASTORcOallocatorlEDigiCASTORgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlEDigiCASTORcOallocatorlEDigiCASTORgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_vectorlEDigiCASTORcOallocatorlEDigiCASTORgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlEDigiCASTORcOallocatorlEDigiCASTORgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_vectorlEDigiCASTORcOallocatorlEDigiCASTORgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RecHitCASTOR>",117,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_vectorlERecHitCASTORcOallocatorlERecHitCASTORgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlERecHitCASTORcOallocatorlERecHitCASTORgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_vectorlERecHitCASTORcOallocatorlERecHitCASTORgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlERecHitCASTORcOallocatorlERecHitCASTORgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_vectorlERecHitCASTORcOallocatorlERecHitCASTORgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TrackData>",117,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_vectorlETrackDatacOallocatorlETrackDatagRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlETrackDatacOallocatorlETrackDatagRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_vectorlETrackDatacOallocatorlETrackDatagRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlETrackDatacOallocatorlETrackDatagRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_vectorlETrackDatacOallocatorlETrackDatagRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<GenParticle>",117,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_vectorlEGenParticlecOallocatorlEGenParticlegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlEGenParticlecOallocatorlEGenParticlegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_vectorlEGenParticlecOallocatorlEGenParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlEGenParticlecOallocatorlEGenParticlegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_vectorlEGenParticlecOallocatorlEGenParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* CentralityData */
static void G__setup_memvarCentralityData(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_CentralityData));
   { CentralityData *p; p=(CentralityData*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->id)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_string),-1,-1,1,"id=",0,"centrality id");
   G__memvar_setup((void*)((long)(&p->cenBin)-(long)(p)),105,0,0,-1,-1,-1,1,"cenBin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cenNpartic)-(long)(p)),102,0,0,-1,-1,-1,1,"cenNpartic=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cenNpartSigma)-(long)(p)),102,0,0,-1,-1,-1,1,"cenNpartSigma=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cenNcoll)-(long)(p)),102,0,0,-1,-1,-1,1,"cenNcoll=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cenNcollSigma)-(long)(p)),102,0,0,-1,-1,-1,1,"cenNcollSigma=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cenBpar)-(long)(p)),102,0,0,-1,-1,-1,1,"cenBpar=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cenBsigma)-(long)(p)),102,0,0,-1,-1,-1,1,"cenBsigma=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RecHit */
static void G__setup_memvarRecHit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_RecHit));
   { RecHit *p; p=(RecHit*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Energy)-(long)(p)),102,0,0,-1,-1,-1,1,"Energy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Phi)-(long)(p)),102,0,0,-1,-1,-1,1,"Phi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Eta)-(long)(p)),102,0,0,-1,-1,-1,1,"Eta=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RecHitEB */
static void G__setup_memvarRecHitEB(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_RecHitEB));
   { RecHitEB *p; p=(RecHitEB*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Iphi)-(long)(p)),105,0,0,-1,-1,-1,1,"Iphi=",0,"do we need this?");
   G__memvar_setup((void*)((long)(&p->Ieta)-(long)(p)),105,0,0,-1,-1,-1,1,"Ieta=",0,"do we need this?");
   G__memvar_setup((void*)((long)(&p->Time)-(long)(p)),102,0,0,-1,-1,-1,1,"Time=",0,"do we need this?");
   G__memvar_setup((void*)((long)(&p->Severity)-(long)(p)),105,0,0,-1,-1,-1,1,"Severity=",0,"do we need this?");
   G__memvar_setup((void*)((long)(&p->SwissCrx)-(long)(p)),102,0,0,-1,-1,-1,1,"SwissCrx=",0,"do we need this?");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RecHitEE */
static void G__setup_memvarRecHitEE(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_RecHitEE));
   { RecHitEE *p; p=(RecHitEE*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Ix)-(long)(p)),105,0,0,-1,-1,-1,1,"Ix=",0,"do we need this?");
   G__memvar_setup((void*)((long)(&p->Iy)-(long)(p)),105,0,0,-1,-1,-1,1,"Iy=",0,"do we need this?");
   G__memvar_setup((void*)((long)(&p->Time)-(long)(p)),102,0,0,-1,-1,-1,1,"Time=",0,"do we need this?");
   G__memvar_setup((void*)((long)(&p->Severity)-(long)(p)),105,0,0,-1,-1,-1,1,"Severity=",0,"do we need this?");
   G__memvar_setup((void*)((long)(&p->SwissCrx)-(long)(p)),102,0,0,-1,-1,-1,1,"SwissCrx=",0,"do we need this?");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RecHitHBHE */
static void G__setup_memvarRecHitHBHE(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_RecHitHBHE));
   { RecHitHBHE *p; p=(RecHitHBHE*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Iphi)-(long)(p)),105,0,0,-1,-1,-1,1,"Iphi=",0,"do we need this?");
   G__memvar_setup((void*)((long)(&p->Ieta)-(long)(p)),105,0,0,-1,-1,-1,1,"Ieta=",0,"do we need this?");
   G__memvar_setup((void*)((long)(&p->Idepth)-(long)(p)),105,0,0,-1,-1,-1,1,"Idepth=",0,"do we need this?");
   G__memvar_setup((void*)((long)(&p->Saturation)-(long)(p)),105,0,0,-1,-1,-1,1,"Saturation=",0,"do we need this?");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RecHitHF */
static void G__setup_memvarRecHitHF(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_RecHitHF));
   { RecHitHF *p; p=(RecHitHF*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Iphi)-(long)(p)),105,0,0,-1,-1,-1,1,"Iphi=",0,"do we need this?");
   G__memvar_setup((void*)((long)(&p->Ieta)-(long)(p)),105,0,0,-1,-1,-1,1,"Ieta=",0,"do we need this?");
   G__memvar_setup((void*)((long)(&p->Idepth)-(long)(p)),105,0,0,-1,-1,-1,1,"Idepth=",0,"do we need this?");
   G__memvar_setup((void*)((long)(&p->Saturation)-(long)(p)),105,0,0,-1,-1,-1,1,"Saturation=",0,"do we need this?");
   G__memvar_setup((void*)((long)(&p->PMThitLS)-(long)(p)),105,0,0,-1,-1,-1,1,"PMThitLS=",0,"do we need this?");
   G__memvar_setup((void*)((long)(&p->PMThitTime)-(long)(p)),105,0,0,-1,-1,-1,1,"PMThitTime=",0,"do we need this?");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TowerHF */
static void G__setup_memvarTowerHF(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_TowerHF));
   { TowerHF *p; p=(TowerHF*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Energy)-(long)(p)),102,0,0,-1,-1,-1,1,"Energy=",0,"// l - s ~ e; l + s ~ h + e; h ~ 2 s ? // 900");
   G__memvar_setup((void*)((long)(&p->Pt)-(long)(p)),102,0,0,-1,-1,-1,1,"Pt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Phi)-(long)(p)),102,0,0,-1,-1,-1,1,"Phi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Eta)-(long)(p)),102,0,0,-1,-1,-1,1,"Eta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->IetaAbs)-(long)(p)),105,0,0,-1,-1,-1,1,"IetaAbs=",0,"do we need this?");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RecHitZDC */
static void G__setup_memvarRecHitZDC(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_RecHitZDC));
   { RecHitZDC *p; p=(RecHitZDC*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Isection)-(long)(p)),105,0,0,-1,-1,-1,1,"Isection=",0,"if(zside==-1) Detector=ZDCM; if(section==1) SubDetector=EM; 2=HAD");
   G__memvar_setup((void*)((long)(&p->Ichannel)-(long)(p)),105,0,0,-1,-1,-1,1,"Ichannel=",0,"add saturation bits etc");
   G__memvar_setup((void*)((long)(&p->Saturation)-(long)(p)),105,0,0,-1,-1,-1,1,"Saturation=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* DigiZDC */
static void G__setup_memvarDigiZDC(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_DigiZDC));
   { DigiZDC *p; p=(DigiZDC*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->FC)-(long)(p)),102,0,0,-1,-1,-1,1,"FC[10]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ADC)-(long)(p)),102,0,0,-1,-1,-1,1,"ADC[10]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Iside)-(long)(p)),105,0,0,-1,-1,-1,1,"Iside=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Isection)-(long)(p)),105,0,0,-1,-1,-1,1,"Isection=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Ichannel)-(long)(p)),105,0,0,-1,-1,-1,1,"Ichannel=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->CapIdTs0)-(long)(p)),105,0,0,-1,-1,-1,1,"CapIdTs0=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* DigiCASTOR */
static void G__setup_memvarDigiCASTOR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_DigiCASTOR));
   { DigiCASTOR *p; p=(DigiCASTOR*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->FC)-(long)(p)),102,0,0,-1,-1,-1,1,"FC[10]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ADC)-(long)(p)),102,0,0,-1,-1,-1,1,"ADC[10]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Sector)-(long)(p)),105,0,0,-1,-1,-1,1,"Sector=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Module)-(long)(p)),105,0,0,-1,-1,-1,1,"Module=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->CapIdTs0)-(long)(p)),105,0,0,-1,-1,-1,1,"CapIdTs0=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RecHitCASTOR */
static void G__setup_memvarRecHitCASTOR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_RecHitCASTOR));
   { RecHitCASTOR *p; p=(RecHitCASTOR*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Time)-(long)(p)),102,0,0,-1,-1,-1,1,"Time=",0,"do we need this?");
   G__memvar_setup((void*)((long)(&p->Sector)-(long)(p)),105,0,0,-1,-1,-1,1,"Sector=",0,"do we need this? // use single index instead !");
   G__memvar_setup((void*)((long)(&p->Module)-(long)(p)),105,0,0,-1,-1,-1,1,"Module=",0,"do we need this?");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TrackData */
static void G__setup_memvarTrackData(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_TrackData));
   { TrackData *p; p=(TrackData*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Pt)-(long)(p)),102,0,0,-1,-1,-1,1,"Pt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Eta)-(long)(p)),102,0,0,-1,-1,-1,1,"Eta=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* GenParticle */
static void G__setup_memvarGenParticle(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_GenParticle));
   { GenParticle *p; p=(GenParticle*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Id)-(long)(p)),105,0,0,-1,-1,-1,1,"Id=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Status)-(long)(p)),105,0,0,-1,-1,-1,1,"Status=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Px)-(long)(p)),102,0,0,-1,-1,-1,1,"Px=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Py)-(long)(p)),102,0,0,-1,-1,-1,1,"Py=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Pz)-(long)(p)),102,0,0,-1,-1,-1,1,"Pz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fProp)-(long)(p)),85,0,1,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_ParticleInfocLcLProperties),-1,-1,1,"fProp=",0,"! for caching !");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* AnalysisEvent */
static void G__setup_memvarAnalysisEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_AnalysisEvent));
   { AnalysisEvent *p; p=(AnalysisEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->runNb)-(long)(p)),104,0,0,-1,-1,-1,1,"runNb=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->evtNb)-(long)(p)),104,0,0,-1,-1,-1,1,"evtNb=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bxNb)-(long)(p)),104,0,0,-1,-1,-1,1,"bxNb=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->orbitNb)-(long)(p)),104,0,0,-1,-1,-1,1,"orbitNb=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->lumiNb)-(long)(p)),104,0,0,-1,-1,-1,1,"lumiNb=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->time)-(long)(p)),109,0,0,-1,-1,-1,1,"time=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cenHf)-(long)(p)),102,0,0,-1,-1,-1,1,"cenHf=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cenHft)-(long)(p)),102,0,0,-1,-1,-1,1,"cenHft=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cenHftp)-(long)(p)),102,0,0,-1,-1,-1,1,"cenHftp=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cenHftm)-(long)(p)),102,0,0,-1,-1,-1,1,"cenHftm=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cenEb)-(long)(p)),102,0,0,-1,-1,-1,1,"cenEb=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cenEe)-(long)(p)),102,0,0,-1,-1,-1,1,"cenEe=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cenEep)-(long)(p)),102,0,0,-1,-1,-1,1,"cenEep=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cenEem)-(long)(p)),102,0,0,-1,-1,-1,1,"cenEem=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cenZdc)-(long)(p)),102,0,0,-1,-1,-1,1,"cenZdc=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cenZdcm)-(long)(p)),102,0,0,-1,-1,-1,1,"cenZdcm=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cenZdcp)-(long)(p)),102,0,0,-1,-1,-1,1,"cenZdcp=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cenNpix)-(long)(p)),102,0,0,-1,-1,-1,1,"cenNpix=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cenEt)-(long)(p)),102,0,0,-1,-1,-1,1,"cenEt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Centrality)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_vectorlECentralityDatacOallocatorlECentralityDatagRsPgR),G__defined_typename("vector<CentralityData>"),-1,1,"Centrality=",0,"map to keep different centralities, if needed");
   G__memvar_setup((void*)((long)(&p->hasEventPlane)-(long)(p)),103,0,0,-1,-1,-1,1,"hasEventPlane=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->evtPlaneTracksMidEta)-(long)(p)),102,0,0,-1,-1,-1,1,"evtPlaneTracksMidEta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->evtPlaneHF)-(long)(p)),102,0,0,-1,-1,-1,1,"evtPlaneHF=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hasDetData)-(long)(p)),103,0,0,-1,-1,-1,1,"hasDetData=",0,"flag do indicate if there is any detector level data stored");
   G__memvar_setup((void*)((long)(&p->EB)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_vectorlERecHitEBcOallocatorlERecHitEBgRsPgR),G__defined_typename("vector<RecHitEB>"),-1,1,"EB=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EE)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_vectorlERecHitEEcOallocatorlERecHitEEgRsPgR),G__defined_typename("vector<RecHitEE>"),-1,1,"EE=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hbheNoiseFilter)-(long)(p)),105,0,0,-1,-1,-1,1,"hbheNoiseFilter=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->HBHE)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_vectorlERecHitHBHEcOallocatorlERecHitHBHEgRsPgR),G__defined_typename("vector<RecHitHBHE>"),-1,1,"HBHE=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->HF)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_vectorlERecHitHFcOallocatorlERecHitHFgRsPgR),G__defined_typename("vector<RecHitHF>"),-1,1,"HF=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->HFtowers)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_vectorlETowerHFcOallocatorlETowerHFgRsPgR),G__defined_typename("vector<TowerHF>"),-1,1,"HFtowers=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ZDC)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_vectorlERecHitZDCcOallocatorlERecHitZDCgRsPgR),G__defined_typename("vector<RecHitZDC>"),-1,1,"ZDC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ZDCdigis)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_vectorlEDigiZDCcOallocatorlEDigiZDCgRsPgR),G__defined_typename("vector<DigiZDC>"),-1,1,"ZDCdigis=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nbCasCalPresamples)-(long)(p)),105,0,0,-1,-1,-1,1,"nbCasCalPresamples=",0,"for the digis");
   G__memvar_setup((void*)((long)(&p->CASTORdigis)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_vectorlEDigiCASTORcOallocatorlEDigiCASTORgRsPgR),G__defined_typename("vector<DigiCASTOR>"),-1,1,"CASTORdigis=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->CASTOR)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_vectorlERecHitCASTORcOallocatorlERecHitCASTORgRsPgR),G__defined_typename("vector<RecHitCASTOR>"),-1,1,"CASTOR=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Tracks)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_vectorlETrackDatacOallocatorlETrackDatagRsPgR),G__defined_typename("vector<TrackData>"),-1,1,"Tracks=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nVertex)-(long)(p)),105,0,0,-1,-1,-1,1,"nVertex=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vertexX)-(long)(p)),102,0,0,-1,-1,-1,1,"vertexX=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vertexY)-(long)(p)),102,0,0,-1,-1,-1,1,"vertexY=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vertexZ)-(long)(p)),102,0,0,-1,-1,-1,1,"vertexZ=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vertexXe)-(long)(p)),102,0,0,-1,-1,-1,1,"vertexXe=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vertexYe)-(long)(p)),102,0,0,-1,-1,-1,1,"vertexYe=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vertexZe)-(long)(p)),102,0,0,-1,-1,-1,1,"vertexZe=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vertexIsFake)-(long)(p)),103,0,0,-1,-1,-1,1,"vertexIsFake=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isMC)-(long)(p)),103,0,0,-1,-1,-1,1,"isMC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->genImpactParameter)-(long)(p)),102,0,0,-1,-1,-1,1,"genImpactParameter=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->genNpart)-(long)(p)),105,0,0,-1,-1,-1,1,"genNpart=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->genProcessID)-(long)(p)),105,0,0,-1,-1,-1,1,"genProcessID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->GEN)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_vectorlEGenParticlecOallocatorlEGenParticlegRsPgR),G__defined_typename("vector<GenParticle>"),-1,1,"GEN=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hltAccept)-(long)(p)),105,0,0,-1,-1,-1,1,"hltAccept[200]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hltPrescl)-(long)(p)),105,0,0,-1,-1,-1,1,"hltPrescl[200]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->algDecision)-(long)(p)),105,0,0,-1,-1,-1,1,"algDecision[128]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->algDecisionB4mask)-(long)(p)),105,0,0,-1,-1,-1,1,"algDecisionB4mask[128]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->algPrescale)-(long)(p)),105,0,0,-1,-1,-1,1,"algPrescale[128]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ttDecision)-(long)(p)),105,0,0,-1,-1,-1,1,"ttDecision[64]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ttDecisionB4mask)-(long)(p)),105,0,0,-1,-1,-1,1,"ttDecisionB4mask[64]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ttPrescale)-(long)(p)),105,0,0,-1,-1,-1,1,"ttPrescale[64]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->instLuminosity)-(long)(p)),102,0,0,-1,-1,-1,1,"instLuminosity=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->instLuminosityCorr)-(long)(p)),102,0,0,-1,-1,-1,1,"instLuminosityCorr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarCastorTreeVariablesDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncCentralityData(void) {
   /* CentralityData */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_CentralityData));
   G__memfunc_setup("CentralityData",1433,G__CastorTreeVariablesDict_466_0_1, 105, G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_CentralityData), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__CastorTreeVariablesDict_466_0_2, 85, G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&CentralityData::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__CastorTreeVariablesDict_466_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CentralityData::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__CastorTreeVariablesDict_466_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&CentralityData::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__CastorTreeVariablesDict_466_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&CentralityData::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__CastorTreeVariablesDict_466_0_6, 85, G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__CastorTreeVariablesDict_466_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__CastorTreeVariablesDict_466_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__CastorTreeVariablesDict_466_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__CastorTreeVariablesDict_466_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CentralityData::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__CastorTreeVariablesDict_466_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CentralityData::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__CastorTreeVariablesDict_466_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CentralityData::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__CastorTreeVariablesDict_466_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CentralityData::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("CentralityData", 1433, G__CastorTreeVariablesDict_466_0_14, (int) ('i'), G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_CentralityData), -1, 0, 1, 1, 1, 0, "u 'CentralityData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CentralityData", 1559, G__CastorTreeVariablesDict_466_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__CastorTreeVariablesDict_466_0_16, (int) ('u'), G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_CentralityData), -1, 1, 1, 1, 1, 0, "u 'CentralityData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRecHit(void) {
   /* RecHit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_RecHit));
   G__memfunc_setup("RecHit",575,G__CastorTreeVariablesDict_467_0_1, 105, G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_RecHit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEt",473,G__CastorTreeVariablesDict_467_0_2, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__CastorTreeVariablesDict_467_0_3, 85, G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RecHit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__CastorTreeVariablesDict_467_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RecHit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__CastorTreeVariablesDict_467_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RecHit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__CastorTreeVariablesDict_467_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RecHit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__CastorTreeVariablesDict_467_0_7, 85, G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__CastorTreeVariablesDict_467_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__CastorTreeVariablesDict_467_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__CastorTreeVariablesDict_467_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__CastorTreeVariablesDict_467_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RecHit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__CastorTreeVariablesDict_467_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RecHit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__CastorTreeVariablesDict_467_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RecHit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__CastorTreeVariablesDict_467_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RecHit::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("RecHit", 575, G__CastorTreeVariablesDict_467_0_15, (int) ('i'), G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_RecHit), -1, 0, 1, 1, 1, 0, "u 'RecHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~RecHit", 701, G__CastorTreeVariablesDict_467_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__CastorTreeVariablesDict_467_0_17, (int) ('u'), G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_RecHit), -1, 1, 1, 1, 1, 0, "u 'RecHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRecHitEB(void) {
   /* RecHitEB */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_RecHitEB));
   G__memfunc_setup("RecHitEB",710,G__CastorTreeVariablesDict_468_0_1, 105, G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_RecHitEB), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__CastorTreeVariablesDict_468_0_2, 85, G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RecHitEB::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__CastorTreeVariablesDict_468_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RecHitEB::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__CastorTreeVariablesDict_468_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RecHitEB::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__CastorTreeVariablesDict_468_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RecHitEB::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__CastorTreeVariablesDict_468_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__CastorTreeVariablesDict_468_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RecHitEB::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__CastorTreeVariablesDict_468_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RecHitEB::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__CastorTreeVariablesDict_468_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RecHitEB::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__CastorTreeVariablesDict_468_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RecHitEB::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("RecHitEB", 710, G__CastorTreeVariablesDict_468_0_14, (int) ('i'), G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_RecHitEB), -1, 0, 1, 1, 1, 0, "u 'RecHitEB' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~RecHitEB", 836, G__CastorTreeVariablesDict_468_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__CastorTreeVariablesDict_468_0_16, (int) ('u'), G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_RecHitEB), -1, 1, 1, 1, 1, 0, "u 'RecHitEB' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRecHitEE(void) {
   /* RecHitEE */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_RecHitEE));
   G__memfunc_setup("RecHitEE",713,G__CastorTreeVariablesDict_469_0_1, 105, G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_RecHitEE), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__CastorTreeVariablesDict_469_0_2, 85, G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RecHitEE::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__CastorTreeVariablesDict_469_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RecHitEE::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__CastorTreeVariablesDict_469_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RecHitEE::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__CastorTreeVariablesDict_469_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RecHitEE::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__CastorTreeVariablesDict_469_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__CastorTreeVariablesDict_469_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RecHitEE::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__CastorTreeVariablesDict_469_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RecHitEE::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__CastorTreeVariablesDict_469_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RecHitEE::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__CastorTreeVariablesDict_469_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RecHitEE::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("RecHitEE", 713, G__CastorTreeVariablesDict_469_0_14, (int) ('i'), G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_RecHitEE), -1, 0, 1, 1, 1, 0, "u 'RecHitEE' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~RecHitEE", 839, G__CastorTreeVariablesDict_469_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__CastorTreeVariablesDict_469_0_16, (int) ('u'), G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_RecHitEE), -1, 1, 1, 1, 1, 0, "u 'RecHitEE' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRecHitHBHE(void) {
   /* RecHitHBHE */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_RecHitHBHE));
   G__memfunc_setup("RecHitHBHE",854,G__CastorTreeVariablesDict_470_0_1, 105, G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_RecHitHBHE), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__CastorTreeVariablesDict_470_0_2, 85, G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RecHitHBHE::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__CastorTreeVariablesDict_470_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RecHitHBHE::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__CastorTreeVariablesDict_470_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RecHitHBHE::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__CastorTreeVariablesDict_470_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RecHitHBHE::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__CastorTreeVariablesDict_470_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__CastorTreeVariablesDict_470_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RecHitHBHE::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__CastorTreeVariablesDict_470_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RecHitHBHE::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__CastorTreeVariablesDict_470_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RecHitHBHE::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__CastorTreeVariablesDict_470_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RecHitHBHE::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("RecHitHBHE", 854, G__CastorTreeVariablesDict_470_0_14, (int) ('i'), G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_RecHitHBHE), -1, 0, 1, 1, 1, 0, "u 'RecHitHBHE' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~RecHitHBHE", 980, G__CastorTreeVariablesDict_470_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__CastorTreeVariablesDict_470_0_16, (int) ('u'), G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_RecHitHBHE), -1, 1, 1, 1, 1, 0, "u 'RecHitHBHE' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRecHitHF(void) {
   /* RecHitHF */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_RecHitHF));
   G__memfunc_setup("RecHitHF",717,G__CastorTreeVariablesDict_471_0_1, 105, G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_RecHitHF), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__CastorTreeVariablesDict_471_0_2, 85, G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RecHitHF::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__CastorTreeVariablesDict_471_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RecHitHF::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__CastorTreeVariablesDict_471_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RecHitHF::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__CastorTreeVariablesDict_471_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RecHitHF::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__CastorTreeVariablesDict_471_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__CastorTreeVariablesDict_471_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RecHitHF::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__CastorTreeVariablesDict_471_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RecHitHF::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__CastorTreeVariablesDict_471_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RecHitHF::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__CastorTreeVariablesDict_471_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RecHitHF::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("RecHitHF", 717, G__CastorTreeVariablesDict_471_0_14, (int) ('i'), G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_RecHitHF), -1, 0, 1, 1, 1, 0, "u 'RecHitHF' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~RecHitHF", 843, G__CastorTreeVariablesDict_471_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__CastorTreeVariablesDict_471_0_16, (int) ('u'), G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_RecHitHF), -1, 1, 1, 1, 1, 0, "u 'RecHitHF' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTowerHF(void) {
   /* TowerHF */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_TowerHF));
   G__memfunc_setup("TowerHF",671,G__CastorTreeVariablesDict_472_0_1, 105, G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_TowerHF), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__CastorTreeVariablesDict_472_0_2, 85, G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TowerHF::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__CastorTreeVariablesDict_472_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TowerHF::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__CastorTreeVariablesDict_472_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TowerHF::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__CastorTreeVariablesDict_472_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TowerHF::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__CastorTreeVariablesDict_472_0_6, 85, G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__CastorTreeVariablesDict_472_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__CastorTreeVariablesDict_472_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__CastorTreeVariablesDict_472_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__CastorTreeVariablesDict_472_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TowerHF::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__CastorTreeVariablesDict_472_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TowerHF::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__CastorTreeVariablesDict_472_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TowerHF::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__CastorTreeVariablesDict_472_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TowerHF::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TowerHF", 671, G__CastorTreeVariablesDict_472_0_14, (int) ('i'), G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_TowerHF), -1, 0, 1, 1, 1, 0, "u 'TowerHF' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TowerHF", 797, G__CastorTreeVariablesDict_472_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__CastorTreeVariablesDict_472_0_16, (int) ('u'), G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_TowerHF), -1, 1, 1, 1, 1, 0, "u 'TowerHF' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRecHitZDC(void) {
   /* RecHitZDC */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_RecHitZDC));
   G__memfunc_setup("RecHitZDC",800,G__CastorTreeVariablesDict_473_0_1, 105, G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_RecHitZDC), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__CastorTreeVariablesDict_473_0_2, 85, G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RecHitZDC::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__CastorTreeVariablesDict_473_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RecHitZDC::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__CastorTreeVariablesDict_473_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RecHitZDC::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__CastorTreeVariablesDict_473_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RecHitZDC::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__CastorTreeVariablesDict_473_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__CastorTreeVariablesDict_473_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RecHitZDC::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__CastorTreeVariablesDict_473_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RecHitZDC::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__CastorTreeVariablesDict_473_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RecHitZDC::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__CastorTreeVariablesDict_473_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RecHitZDC::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("RecHitZDC", 800, G__CastorTreeVariablesDict_473_0_14, (int) ('i'), G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_RecHitZDC), -1, 0, 1, 1, 1, 0, "u 'RecHitZDC' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~RecHitZDC", 926, G__CastorTreeVariablesDict_473_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__CastorTreeVariablesDict_473_0_16, (int) ('u'), G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_RecHitZDC), -1, 1, 1, 1, 1, 0, "u 'RecHitZDC' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncDigiZDC(void) {
   /* DigiZDC */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_DigiZDC));
   G__memfunc_setup("DigiZDC",606,G__CastorTreeVariablesDict_474_0_1, 105, G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_DigiZDC), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__CastorTreeVariablesDict_474_0_2, 85, G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&DigiZDC::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__CastorTreeVariablesDict_474_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DigiZDC::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__CastorTreeVariablesDict_474_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&DigiZDC::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__CastorTreeVariablesDict_474_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&DigiZDC::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__CastorTreeVariablesDict_474_0_6, 85, G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__CastorTreeVariablesDict_474_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__CastorTreeVariablesDict_474_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__CastorTreeVariablesDict_474_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__CastorTreeVariablesDict_474_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DigiZDC::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__CastorTreeVariablesDict_474_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DigiZDC::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__CastorTreeVariablesDict_474_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DigiZDC::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__CastorTreeVariablesDict_474_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DigiZDC::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("DigiZDC", 606, G__CastorTreeVariablesDict_474_0_14, (int) ('i'), G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_DigiZDC), -1, 0, 1, 1, 1, 0, "u 'DigiZDC' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~DigiZDC", 732, G__CastorTreeVariablesDict_474_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__CastorTreeVariablesDict_474_0_16, (int) ('u'), G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_DigiZDC), -1, 1, 1, 1, 1, 0, "u 'DigiZDC' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncDigiCASTOR(void) {
   /* DigiCASTOR */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_DigiCASTOR));
   G__memfunc_setup("DigiCASTOR",841,G__CastorTreeVariablesDict_475_0_1, 105, G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_DigiCASTOR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__CastorTreeVariablesDict_475_0_2, 85, G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&DigiCASTOR::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__CastorTreeVariablesDict_475_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DigiCASTOR::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__CastorTreeVariablesDict_475_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&DigiCASTOR::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__CastorTreeVariablesDict_475_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&DigiCASTOR::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__CastorTreeVariablesDict_475_0_6, 85, G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__CastorTreeVariablesDict_475_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__CastorTreeVariablesDict_475_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__CastorTreeVariablesDict_475_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__CastorTreeVariablesDict_475_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DigiCASTOR::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__CastorTreeVariablesDict_475_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DigiCASTOR::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__CastorTreeVariablesDict_475_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DigiCASTOR::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__CastorTreeVariablesDict_475_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DigiCASTOR::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("DigiCASTOR", 841, G__CastorTreeVariablesDict_475_0_14, (int) ('i'), G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_DigiCASTOR), -1, 0, 1, 1, 1, 0, "u 'DigiCASTOR' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~DigiCASTOR", 967, G__CastorTreeVariablesDict_475_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__CastorTreeVariablesDict_475_0_16, (int) ('u'), G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_DigiCASTOR), -1, 1, 1, 1, 1, 0, "u 'DigiCASTOR' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRecHitCASTOR(void) {
   /* RecHitCASTOR */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_RecHitCASTOR));
   G__memfunc_setup("RecHitCASTOR",1035,G__CastorTreeVariablesDict_476_0_1, 105, G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_RecHitCASTOR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetModuleId",1075,G__CastorTreeVariablesDict_476_0_2, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSectorId",1085,G__CastorTreeVariablesDict_476_0_3, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__CastorTreeVariablesDict_476_0_4, 85, G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RecHitCASTOR::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__CastorTreeVariablesDict_476_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RecHitCASTOR::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__CastorTreeVariablesDict_476_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RecHitCASTOR::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__CastorTreeVariablesDict_476_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RecHitCASTOR::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__CastorTreeVariablesDict_476_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__CastorTreeVariablesDict_476_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RecHitCASTOR::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__CastorTreeVariablesDict_476_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RecHitCASTOR::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__CastorTreeVariablesDict_476_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RecHitCASTOR::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__CastorTreeVariablesDict_476_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RecHitCASTOR::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("RecHitCASTOR", 1035, G__CastorTreeVariablesDict_476_0_16, (int) ('i'), G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_RecHitCASTOR), -1, 0, 1, 1, 1, 0, "u 'RecHitCASTOR' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~RecHitCASTOR", 1161, G__CastorTreeVariablesDict_476_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__CastorTreeVariablesDict_476_0_18, (int) ('u'), G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_RecHitCASTOR), -1, 1, 1, 1, 1, 0, "u 'RecHitCASTOR' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTrackData(void) {
   /* TrackData */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_TrackData));
   G__memfunc_setup("TrackData",879,G__CastorTreeVariablesDict_477_0_1, 105, G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_TrackData), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__CastorTreeVariablesDict_477_0_2, 85, G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TrackData::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__CastorTreeVariablesDict_477_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TrackData::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__CastorTreeVariablesDict_477_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TrackData::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__CastorTreeVariablesDict_477_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TrackData::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__CastorTreeVariablesDict_477_0_6, 85, G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__CastorTreeVariablesDict_477_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__CastorTreeVariablesDict_477_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__CastorTreeVariablesDict_477_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__CastorTreeVariablesDict_477_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TrackData::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__CastorTreeVariablesDict_477_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TrackData::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__CastorTreeVariablesDict_477_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TrackData::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__CastorTreeVariablesDict_477_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TrackData::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TrackData", 879, G__CastorTreeVariablesDict_477_0_14, (int) ('i'), G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_TrackData), -1, 0, 1, 1, 1, 0, "u 'TrackData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TrackData", 1005, G__CastorTreeVariablesDict_477_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__CastorTreeVariablesDict_477_0_16, (int) ('u'), G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_TrackData), -1, 1, 1, 1, 1, 0, "u 'TrackData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncGenParticle(void) {
   /* GenParticle */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_GenParticle));
   G__memfunc_setup("GenParticle",1102,G__CastorTreeVariablesDict_478_0_1, 105, G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_GenParticle), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetProperties",1357,G__CastorTreeVariablesDict_478_0_2, 117, G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_ParticleInfocLcLProperties), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCosTheta",1083,G__CastorTreeVariablesDict_478_0_3, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTheta",790,G__CastorTreeVariablesDict_478_0_4, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEta",570,G__CastorTreeVariablesDict_478_0_5, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRapidity",1126,G__CastorTreeVariablesDict_478_0_6, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCharge",874,G__CastorTreeVariablesDict_478_0_7, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMass",692,G__CastorTreeVariablesDict_478_0_8, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMomentum",1138,G__CastorTreeVariablesDict_478_0_9, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergy",906,G__CastorTreeVariablesDict_478_0_10, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhi",577,G__CastorTreeVariablesDict_478_0_11, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTransverseEnergy",1975,G__CastorTreeVariablesDict_478_0_12, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTransverseMomentum",2207,G__CastorTreeVariablesDict_478_0_13, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__CastorTreeVariablesDict_478_0_14, 85, G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&GenParticle::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__CastorTreeVariablesDict_478_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GenParticle::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__CastorTreeVariablesDict_478_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&GenParticle::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__CastorTreeVariablesDict_478_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&GenParticle::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__CastorTreeVariablesDict_478_0_18, 85, G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__CastorTreeVariablesDict_478_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__CastorTreeVariablesDict_478_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__CastorTreeVariablesDict_478_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__CastorTreeVariablesDict_478_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GenParticle::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__CastorTreeVariablesDict_478_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GenParticle::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__CastorTreeVariablesDict_478_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GenParticle::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__CastorTreeVariablesDict_478_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GenParticle::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("GenParticle", 1102, G__CastorTreeVariablesDict_478_0_26, (int) ('i'), G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_GenParticle), -1, 0, 1, 1, 1, 0, "u 'GenParticle' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~GenParticle", 1228, G__CastorTreeVariablesDict_478_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncAnalysisEvent(void) {
   /* AnalysisEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_AnalysisEvent));
   G__memfunc_setup("AnalysisEvent",1350,G__CastorTreeVariablesDict_479_0_1, 105, G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_AnalysisEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCentrality",1343,G__CastorTreeVariablesDict_479_0_2, 117, G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_CentralityData), -1, 1, 1, 1, 1, 9, "u 'string' - 11 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HasCentrality",1339,G__CastorTreeVariablesDict_479_0_3, 103, -1, -1, 0, 1, 1, 1, 8, "u 'string' - 11 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__CastorTreeVariablesDict_479_0_4, 85, G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&AnalysisEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__CastorTreeVariablesDict_479_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AnalysisEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__CastorTreeVariablesDict_479_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&AnalysisEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__CastorTreeVariablesDict_479_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&AnalysisEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__CastorTreeVariablesDict_479_0_8, 85, G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__CastorTreeVariablesDict_479_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__CastorTreeVariablesDict_479_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__CastorTreeVariablesDict_479_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__CastorTreeVariablesDict_479_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AnalysisEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__CastorTreeVariablesDict_479_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AnalysisEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__CastorTreeVariablesDict_479_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AnalysisEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__CastorTreeVariablesDict_479_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AnalysisEvent::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("AnalysisEvent", 1350, G__CastorTreeVariablesDict_479_0_16, (int) ('i'), G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_AnalysisEvent), -1, 0, 1, 1, 1, 0, "u 'AnalysisEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~AnalysisEvent", 1476, G__CastorTreeVariablesDict_479_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__CastorTreeVariablesDict_479_0_18, (int) ('u'), G__get_linked_tagnum(&G__CastorTreeVariablesDictLN_AnalysisEvent), -1, 1, 1, 1, 1, 0, "u 'AnalysisEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncCastorTreeVariablesDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalCastorTreeVariablesDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcCastorTreeVariablesDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__CastorTreeVariablesDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__CastorTreeVariablesDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__CastorTreeVariablesDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__CastorTreeVariablesDictLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__CastorTreeVariablesDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__CastorTreeVariablesDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__CastorTreeVariablesDictLN_ParticleInfo = { "ParticleInfo" , 99 , -1 };
G__linked_taginfo G__CastorTreeVariablesDictLN_ParticleInfocLcLProperties = { "ParticleInfo::Properties" , 99 , -1 };
G__linked_taginfo G__CastorTreeVariablesDictLN_maplEintcOParticleInfocLcLPropertiescOlesslEintgRcOallocatorlEpairlEconstsPintcOParticleInfocLcLPropertiesgRsPgRsPgR = { "map<int,ParticleInfo::Properties,less<int>,allocator<pair<const int,ParticleInfo::Properties> > >" , 99 , -1 };
G__linked_taginfo G__CastorTreeVariablesDictLN_vectorlEsetlEintcOlesslEintgRcOallocatorlEintgRsPgRcOallocatorlEsetlEintcOlesslEintgRcOallocatorlEintgRsPgRsPgRsPgR = { "vector<set<int,less<int>,allocator<int> >,allocator<set<int,less<int>,allocator<int> > > >" , 99 , -1 };
G__linked_taginfo G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlEsetlEintcOlesslEintgRcOallocatorlEintgRsPgRcOallocatorlEsetlEintcOlesslEintgRcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<set<int,less<int>,allocator<int> >,allocator<set<int,less<int>,allocator<int> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__CastorTreeVariablesDictLN_CentralityData = { "CentralityData" , 99 , -1 };
G__linked_taginfo G__CastorTreeVariablesDictLN_RecHit = { "RecHit" , 99 , -1 };
G__linked_taginfo G__CastorTreeVariablesDictLN_RecHitEB = { "RecHitEB" , 99 , -1 };
G__linked_taginfo G__CastorTreeVariablesDictLN_RecHitEE = { "RecHitEE" , 99 , -1 };
G__linked_taginfo G__CastorTreeVariablesDictLN_RecHitHBHE = { "RecHitHBHE" , 99 , -1 };
G__linked_taginfo G__CastorTreeVariablesDictLN_RecHitHF = { "RecHitHF" , 99 , -1 };
G__linked_taginfo G__CastorTreeVariablesDictLN_TowerHF = { "TowerHF" , 99 , -1 };
G__linked_taginfo G__CastorTreeVariablesDictLN_RecHitZDC = { "RecHitZDC" , 99 , -1 };
G__linked_taginfo G__CastorTreeVariablesDictLN_DigiZDC = { "DigiZDC" , 99 , -1 };
G__linked_taginfo G__CastorTreeVariablesDictLN_DigiCASTOR = { "DigiCASTOR" , 99 , -1 };
G__linked_taginfo G__CastorTreeVariablesDictLN_RecHitCASTOR = { "RecHitCASTOR" , 99 , -1 };
G__linked_taginfo G__CastorTreeVariablesDictLN_TrackData = { "TrackData" , 99 , -1 };
G__linked_taginfo G__CastorTreeVariablesDictLN_GenParticle = { "GenParticle" , 99 , -1 };
G__linked_taginfo G__CastorTreeVariablesDictLN_AnalysisEvent = { "AnalysisEvent" , 99 , -1 };
G__linked_taginfo G__CastorTreeVariablesDictLN_vectorlECentralityDatacOallocatorlECentralityDatagRsPgR = { "vector<CentralityData,allocator<CentralityData> >" , 99 , -1 };
G__linked_taginfo G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlECentralityDatacOallocatorlECentralityDatagRsPgRcLcLiteratorgR = { "reverse_iterator<vector<CentralityData,allocator<CentralityData> >::iterator>" , 99 , -1 };
G__linked_taginfo G__CastorTreeVariablesDictLN_vectorlERecHitEBcOallocatorlERecHitEBgRsPgR = { "vector<RecHitEB,allocator<RecHitEB> >" , 99 , -1 };
G__linked_taginfo G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlERecHitEBcOallocatorlERecHitEBgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RecHitEB,allocator<RecHitEB> >::iterator>" , 99 , -1 };
G__linked_taginfo G__CastorTreeVariablesDictLN_vectorlERecHitEEcOallocatorlERecHitEEgRsPgR = { "vector<RecHitEE,allocator<RecHitEE> >" , 99 , -1 };
G__linked_taginfo G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlERecHitEEcOallocatorlERecHitEEgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RecHitEE,allocator<RecHitEE> >::iterator>" , 99 , -1 };
G__linked_taginfo G__CastorTreeVariablesDictLN_vectorlERecHitHBHEcOallocatorlERecHitHBHEgRsPgR = { "vector<RecHitHBHE,allocator<RecHitHBHE> >" , 99 , -1 };
G__linked_taginfo G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlERecHitHBHEcOallocatorlERecHitHBHEgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RecHitHBHE,allocator<RecHitHBHE> >::iterator>" , 99 , -1 };
G__linked_taginfo G__CastorTreeVariablesDictLN_vectorlERecHitHFcOallocatorlERecHitHFgRsPgR = { "vector<RecHitHF,allocator<RecHitHF> >" , 99 , -1 };
G__linked_taginfo G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlERecHitHFcOallocatorlERecHitHFgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RecHitHF,allocator<RecHitHF> >::iterator>" , 99 , -1 };
G__linked_taginfo G__CastorTreeVariablesDictLN_vectorlETowerHFcOallocatorlETowerHFgRsPgR = { "vector<TowerHF,allocator<TowerHF> >" , 99 , -1 };
G__linked_taginfo G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlETowerHFcOallocatorlETowerHFgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TowerHF,allocator<TowerHF> >::iterator>" , 99 , -1 };
G__linked_taginfo G__CastorTreeVariablesDictLN_vectorlERecHitZDCcOallocatorlERecHitZDCgRsPgR = { "vector<RecHitZDC,allocator<RecHitZDC> >" , 99 , -1 };
G__linked_taginfo G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlERecHitZDCcOallocatorlERecHitZDCgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RecHitZDC,allocator<RecHitZDC> >::iterator>" , 99 , -1 };
G__linked_taginfo G__CastorTreeVariablesDictLN_vectorlEDigiZDCcOallocatorlEDigiZDCgRsPgR = { "vector<DigiZDC,allocator<DigiZDC> >" , 99 , -1 };
G__linked_taginfo G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlEDigiZDCcOallocatorlEDigiZDCgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<DigiZDC,allocator<DigiZDC> >::iterator>" , 99 , -1 };
G__linked_taginfo G__CastorTreeVariablesDictLN_vectorlEDigiCASTORcOallocatorlEDigiCASTORgRsPgR = { "vector<DigiCASTOR,allocator<DigiCASTOR> >" , 99 , -1 };
G__linked_taginfo G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlEDigiCASTORcOallocatorlEDigiCASTORgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<DigiCASTOR,allocator<DigiCASTOR> >::iterator>" , 99 , -1 };
G__linked_taginfo G__CastorTreeVariablesDictLN_vectorlERecHitCASTORcOallocatorlERecHitCASTORgRsPgR = { "vector<RecHitCASTOR,allocator<RecHitCASTOR> >" , 99 , -1 };
G__linked_taginfo G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlERecHitCASTORcOallocatorlERecHitCASTORgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RecHitCASTOR,allocator<RecHitCASTOR> >::iterator>" , 99 , -1 };
G__linked_taginfo G__CastorTreeVariablesDictLN_vectorlETrackDatacOallocatorlETrackDatagRsPgR = { "vector<TrackData,allocator<TrackData> >" , 99 , -1 };
G__linked_taginfo G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlETrackDatacOallocatorlETrackDatagRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TrackData,allocator<TrackData> >::iterator>" , 99 , -1 };
G__linked_taginfo G__CastorTreeVariablesDictLN_vectorlEGenParticlecOallocatorlEGenParticlegRsPgR = { "vector<GenParticle,allocator<GenParticle> >" , 99 , -1 };
G__linked_taginfo G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlEGenParticlecOallocatorlEGenParticlegRsPgRcLcLiteratorgR = { "reverse_iterator<vector<GenParticle,allocator<GenParticle> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableCastorTreeVariablesDict() {
  G__CastorTreeVariablesDictLN_TClass.tagnum = -1 ;
  G__CastorTreeVariablesDictLN_TBuffer.tagnum = -1 ;
  G__CastorTreeVariablesDictLN_TMemberInspector.tagnum = -1 ;
  G__CastorTreeVariablesDictLN_string.tagnum = -1 ;
  G__CastorTreeVariablesDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__CastorTreeVariablesDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__CastorTreeVariablesDictLN_ParticleInfo.tagnum = -1 ;
  G__CastorTreeVariablesDictLN_ParticleInfocLcLProperties.tagnum = -1 ;
  G__CastorTreeVariablesDictLN_maplEintcOParticleInfocLcLPropertiescOlesslEintgRcOallocatorlEpairlEconstsPintcOParticleInfocLcLPropertiesgRsPgRsPgR.tagnum = -1 ;
  G__CastorTreeVariablesDictLN_vectorlEsetlEintcOlesslEintgRcOallocatorlEintgRsPgRcOallocatorlEsetlEintcOlesslEintgRcOallocatorlEintgRsPgRsPgRsPgR.tagnum = -1 ;
  G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlEsetlEintcOlesslEintgRcOallocatorlEintgRsPgRcOallocatorlEsetlEintcOlesslEintgRcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__CastorTreeVariablesDictLN_CentralityData.tagnum = -1 ;
  G__CastorTreeVariablesDictLN_RecHit.tagnum = -1 ;
  G__CastorTreeVariablesDictLN_RecHitEB.tagnum = -1 ;
  G__CastorTreeVariablesDictLN_RecHitEE.tagnum = -1 ;
  G__CastorTreeVariablesDictLN_RecHitHBHE.tagnum = -1 ;
  G__CastorTreeVariablesDictLN_RecHitHF.tagnum = -1 ;
  G__CastorTreeVariablesDictLN_TowerHF.tagnum = -1 ;
  G__CastorTreeVariablesDictLN_RecHitZDC.tagnum = -1 ;
  G__CastorTreeVariablesDictLN_DigiZDC.tagnum = -1 ;
  G__CastorTreeVariablesDictLN_DigiCASTOR.tagnum = -1 ;
  G__CastorTreeVariablesDictLN_RecHitCASTOR.tagnum = -1 ;
  G__CastorTreeVariablesDictLN_TrackData.tagnum = -1 ;
  G__CastorTreeVariablesDictLN_GenParticle.tagnum = -1 ;
  G__CastorTreeVariablesDictLN_AnalysisEvent.tagnum = -1 ;
  G__CastorTreeVariablesDictLN_vectorlECentralityDatacOallocatorlECentralityDatagRsPgR.tagnum = -1 ;
  G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlECentralityDatacOallocatorlECentralityDatagRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__CastorTreeVariablesDictLN_vectorlERecHitEBcOallocatorlERecHitEBgRsPgR.tagnum = -1 ;
  G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlERecHitEBcOallocatorlERecHitEBgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__CastorTreeVariablesDictLN_vectorlERecHitEEcOallocatorlERecHitEEgRsPgR.tagnum = -1 ;
  G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlERecHitEEcOallocatorlERecHitEEgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__CastorTreeVariablesDictLN_vectorlERecHitHBHEcOallocatorlERecHitHBHEgRsPgR.tagnum = -1 ;
  G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlERecHitHBHEcOallocatorlERecHitHBHEgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__CastorTreeVariablesDictLN_vectorlERecHitHFcOallocatorlERecHitHFgRsPgR.tagnum = -1 ;
  G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlERecHitHFcOallocatorlERecHitHFgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__CastorTreeVariablesDictLN_vectorlETowerHFcOallocatorlETowerHFgRsPgR.tagnum = -1 ;
  G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlETowerHFcOallocatorlETowerHFgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__CastorTreeVariablesDictLN_vectorlERecHitZDCcOallocatorlERecHitZDCgRsPgR.tagnum = -1 ;
  G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlERecHitZDCcOallocatorlERecHitZDCgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__CastorTreeVariablesDictLN_vectorlEDigiZDCcOallocatorlEDigiZDCgRsPgR.tagnum = -1 ;
  G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlEDigiZDCcOallocatorlEDigiZDCgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__CastorTreeVariablesDictLN_vectorlEDigiCASTORcOallocatorlEDigiCASTORgRsPgR.tagnum = -1 ;
  G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlEDigiCASTORcOallocatorlEDigiCASTORgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__CastorTreeVariablesDictLN_vectorlERecHitCASTORcOallocatorlERecHitCASTORgRsPgR.tagnum = -1 ;
  G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlERecHitCASTORcOallocatorlERecHitCASTORgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__CastorTreeVariablesDictLN_vectorlETrackDatacOallocatorlETrackDatagRsPgR.tagnum = -1 ;
  G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlETrackDatacOallocatorlETrackDatagRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__CastorTreeVariablesDictLN_vectorlEGenParticlecOallocatorlEGenParticlegRsPgR.tagnum = -1 ;
  G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlEGenParticlecOallocatorlEGenParticlegRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableCastorTreeVariablesDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__CastorTreeVariablesDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__CastorTreeVariablesDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__CastorTreeVariablesDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__CastorTreeVariablesDictLN_string);
   G__get_linked_tagnum_fwd(&G__CastorTreeVariablesDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__CastorTreeVariablesDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__CastorTreeVariablesDictLN_ParticleInfo);
   G__get_linked_tagnum_fwd(&G__CastorTreeVariablesDictLN_ParticleInfocLcLProperties);
   G__get_linked_tagnum_fwd(&G__CastorTreeVariablesDictLN_maplEintcOParticleInfocLcLPropertiescOlesslEintgRcOallocatorlEpairlEconstsPintcOParticleInfocLcLPropertiesgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__CastorTreeVariablesDictLN_vectorlEsetlEintcOlesslEintgRcOallocatorlEintgRsPgRcOallocatorlEsetlEintcOlesslEintgRcOallocatorlEintgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlEsetlEintcOlesslEintgRcOallocatorlEintgRsPgRcOallocatorlEsetlEintcOlesslEintgRcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__CastorTreeVariablesDictLN_CentralityData),sizeof(CentralityData),-1,262400,(char*)NULL,G__setup_memvarCentralityData,G__setup_memfuncCentralityData);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__CastorTreeVariablesDictLN_RecHit),sizeof(RecHit),-1,262400,(char*)NULL,G__setup_memvarRecHit,G__setup_memfuncRecHit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__CastorTreeVariablesDictLN_RecHitEB),sizeof(RecHitEB),-1,262400,(char*)NULL,G__setup_memvarRecHitEB,G__setup_memfuncRecHitEB);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__CastorTreeVariablesDictLN_RecHitEE),sizeof(RecHitEE),-1,262400,(char*)NULL,G__setup_memvarRecHitEE,G__setup_memfuncRecHitEE);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__CastorTreeVariablesDictLN_RecHitHBHE),sizeof(RecHitHBHE),-1,262400,(char*)NULL,G__setup_memvarRecHitHBHE,G__setup_memfuncRecHitHBHE);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__CastorTreeVariablesDictLN_RecHitHF),sizeof(RecHitHF),-1,262400,(char*)NULL,G__setup_memvarRecHitHF,G__setup_memfuncRecHitHF);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__CastorTreeVariablesDictLN_TowerHF),sizeof(TowerHF),-1,262400,(char*)NULL,G__setup_memvarTowerHF,G__setup_memfuncTowerHF);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__CastorTreeVariablesDictLN_RecHitZDC),sizeof(RecHitZDC),-1,262400,(char*)NULL,G__setup_memvarRecHitZDC,G__setup_memfuncRecHitZDC);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__CastorTreeVariablesDictLN_DigiZDC),sizeof(DigiZDC),-1,262400,(char*)NULL,G__setup_memvarDigiZDC,G__setup_memfuncDigiZDC);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__CastorTreeVariablesDictLN_DigiCASTOR),sizeof(DigiCASTOR),-1,262400,(char*)NULL,G__setup_memvarDigiCASTOR,G__setup_memfuncDigiCASTOR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__CastorTreeVariablesDictLN_RecHitCASTOR),sizeof(RecHitCASTOR),-1,262400,(char*)NULL,G__setup_memvarRecHitCASTOR,G__setup_memfuncRecHitCASTOR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__CastorTreeVariablesDictLN_TrackData),sizeof(TrackData),-1,262400,(char*)NULL,G__setup_memvarTrackData,G__setup_memfuncTrackData);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__CastorTreeVariablesDictLN_GenParticle),sizeof(GenParticle),-1,262400,(char*)NULL,G__setup_memvarGenParticle,G__setup_memfuncGenParticle);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__CastorTreeVariablesDictLN_AnalysisEvent),sizeof(AnalysisEvent),-1,262400,(char*)NULL,G__setup_memvarAnalysisEvent,G__setup_memfuncAnalysisEvent);
   G__get_linked_tagnum_fwd(&G__CastorTreeVariablesDictLN_vectorlECentralityDatacOallocatorlECentralityDatagRsPgR);
   G__get_linked_tagnum_fwd(&G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlECentralityDatacOallocatorlECentralityDatagRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__CastorTreeVariablesDictLN_vectorlERecHitEBcOallocatorlERecHitEBgRsPgR);
   G__get_linked_tagnum_fwd(&G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlERecHitEBcOallocatorlERecHitEBgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__CastorTreeVariablesDictLN_vectorlERecHitEEcOallocatorlERecHitEEgRsPgR);
   G__get_linked_tagnum_fwd(&G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlERecHitEEcOallocatorlERecHitEEgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__CastorTreeVariablesDictLN_vectorlERecHitHBHEcOallocatorlERecHitHBHEgRsPgR);
   G__get_linked_tagnum_fwd(&G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlERecHitHBHEcOallocatorlERecHitHBHEgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__CastorTreeVariablesDictLN_vectorlERecHitHFcOallocatorlERecHitHFgRsPgR);
   G__get_linked_tagnum_fwd(&G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlERecHitHFcOallocatorlERecHitHFgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__CastorTreeVariablesDictLN_vectorlETowerHFcOallocatorlETowerHFgRsPgR);
   G__get_linked_tagnum_fwd(&G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlETowerHFcOallocatorlETowerHFgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__CastorTreeVariablesDictLN_vectorlERecHitZDCcOallocatorlERecHitZDCgRsPgR);
   G__get_linked_tagnum_fwd(&G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlERecHitZDCcOallocatorlERecHitZDCgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__CastorTreeVariablesDictLN_vectorlEDigiZDCcOallocatorlEDigiZDCgRsPgR);
   G__get_linked_tagnum_fwd(&G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlEDigiZDCcOallocatorlEDigiZDCgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__CastorTreeVariablesDictLN_vectorlEDigiCASTORcOallocatorlEDigiCASTORgRsPgR);
   G__get_linked_tagnum_fwd(&G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlEDigiCASTORcOallocatorlEDigiCASTORgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__CastorTreeVariablesDictLN_vectorlERecHitCASTORcOallocatorlERecHitCASTORgRsPgR);
   G__get_linked_tagnum_fwd(&G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlERecHitCASTORcOallocatorlERecHitCASTORgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__CastorTreeVariablesDictLN_vectorlETrackDatacOallocatorlETrackDatagRsPgR);
   G__get_linked_tagnum_fwd(&G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlETrackDatacOallocatorlETrackDatagRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__CastorTreeVariablesDictLN_vectorlEGenParticlecOallocatorlEGenParticlegRsPgR);
   G__get_linked_tagnum_fwd(&G__CastorTreeVariablesDictLN_reverse_iteratorlEvectorlEGenParticlecOallocatorlEGenParticlegRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupCastorTreeVariablesDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupCastorTreeVariablesDict()");
  G__set_cpp_environmentCastorTreeVariablesDict();
  G__cpp_setup_tagtableCastorTreeVariablesDict();

  G__cpp_setup_inheritanceCastorTreeVariablesDict();

  G__cpp_setup_typetableCastorTreeVariablesDict();

  G__cpp_setup_memvarCastorTreeVariablesDict();

  G__cpp_setup_memfuncCastorTreeVariablesDict();
  G__cpp_setup_globalCastorTreeVariablesDict();
  G__cpp_setup_funcCastorTreeVariablesDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncCastorTreeVariablesDict();
  return;
}
class G__cpp_setup_initCastorTreeVariablesDict {
  public:
    G__cpp_setup_initCastorTreeVariablesDict() { G__add_setup_func("CastorTreeVariablesDict",(G__incsetup)(&G__cpp_setupCastorTreeVariablesDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initCastorTreeVariablesDict() { G__remove_setup_func("CastorTreeVariablesDict"); }
};
G__cpp_setup_initCastorTreeVariablesDict G__cpp_setup_initializerCastorTreeVariablesDict;

